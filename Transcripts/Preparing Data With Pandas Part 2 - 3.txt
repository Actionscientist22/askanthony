WEBVTT

1
00:00:04.600 --> 00:00:09.170
Anthony Taylor: Here we go. Good luck. Yeah.

2
00:00:10.090 --> 00:00:15.659
Anthony Taylor: Welcome back to class, hey? Before we get started. I just want to throw something out there. This is.

3
00:00:17.120 --> 00:00:18.700
Anthony Taylor: this is not

4
00:00:20.290 --> 00:00:26.110
Anthony Taylor: fun conversation. But I do want to be very clear, so that we don't run into a problem.

5
00:00:26.820 --> 00:00:29.589
Anthony Taylor: Okay, first up, love.

6
00:00:29.940 --> 00:00:39.089
Anthony Taylor: that you guys are doing study groups that excites me beyond excitement, and every class I've ever seen do study groups does very, very well.

7
00:00:39.470 --> 00:00:43.360
Anthony Taylor: The one thing I wanna make sure we're all bristle clear on.

8
00:00:43.920 --> 00:00:50.779
Anthony Taylor: Okay, a study group is not someone showing you the answer and you writing it down.

9
00:00:52.120 --> 00:00:58.219
Anthony Taylor: Okay, study group is, here's how I found the answer. Now you go do it.

10
00:01:00.410 --> 00:01:04.720
Anthony Taylor: Okay? Cause here's the problem. The school takes plagiarism

11
00:01:04.900 --> 00:01:06.470
Anthony Taylor: very seriously.

12
00:01:07.130 --> 00:01:16.799
Anthony Taylor: I can override it once. I cannot override it twice. So if you are

13
00:01:16.820 --> 00:01:24.999
Anthony Taylor: looking at someone else's code and writing the same thing down, and it gets flagged for plagiarism, I'm going to say, hey? And I know that was just study group. It's no big deal.

14
00:01:25.540 --> 00:01:34.550
Anthony Taylor: Okay. But they're gonna say, that's not how it's supposed to be done. And then and it'll be okay. Cause they say it's my class. I get to do what I want to do.

15
00:01:35.160 --> 00:01:36.340
Anthony Taylor: Okay. But

16
00:01:36.640 --> 00:01:39.390
Anthony Taylor: the next time they're not gonna be so kind

17
00:01:39.690 --> 00:01:42.410
Anthony Taylor: because they're gonna be like, look. we're just not gonna do it.

18
00:01:42.730 --> 00:01:47.619
Anthony Taylor: So be sure in your study groups, guys, that you are

19
00:01:47.660 --> 00:01:56.329
Anthony Taylor: learning from the persons. Persons, other people in the class that have figured this out don't just take what they did and assume it's right.

20
00:01:57.850 --> 00:02:08.859
Anthony Taylor: Ask them, how did you find that? Where did you find that? What activity did we do that in? Those are the questions and discussions you guys should be having. And it's really the same thing with the Tas.

21
00:02:09.600 --> 00:02:10.650
Anthony Taylor: Okay?

22
00:02:10.880 --> 00:02:22.379
Anthony Taylor: So I mean, even even with the tas, you know, they should not be giving you the answer you should be asking, and they should be trying to guide you to the answer.

23
00:02:23.330 --> 00:02:32.050
Anthony Taylor: I know it takes longer, and I know 15 min isn't very long, but pretty much. Nobody schedules any time with Tas. So this usually longer than 15 min.

24
00:02:33.090 --> 00:02:36.460
Anthony Taylor: Okay, I think the only one's been consistent about it is Christine.

25
00:02:37.740 --> 00:02:42.649
Anthony Taylor: So I just wanted to throw that out there. It's on record.

26
00:02:43.270 --> 00:02:50.570
Anthony Taylor: Just remember, study groups are for learning how each other solve the problem, not seeing

27
00:02:51.440 --> 00:02:56.640
Anthony Taylor: how someone did it, and then writing it down. Because that's not really what that's just come

28
00:02:57.520 --> 00:02:58.750
Anthony Taylor: if you want to copy.

29
00:02:59.350 --> 00:03:00.160
Anthony Taylor: Oh, don't.

30
00:03:01.290 --> 00:03:09.210
Anthony Taylor: Okay, that goes for chat TPT. 2. If you use that prompt I gave you, it'll try to guide you to the answer as opposed to just giving.

31
00:03:09.700 --> 00:03:12.460
Anthony Taylor: Has anyone been using that. Besides, like the first week.

32
00:03:13.110 --> 00:03:14.620
Anthony Taylor: hey, Gabe?

33
00:03:14.630 --> 00:03:18.259
Anthony Taylor: Alright! Okay. Good. Proud of all. I'm proud of everybody. I don't care.

34
00:03:18.450 --> 00:03:19.130
Anthony Taylor: But

35
00:03:20.380 --> 00:03:23.870
Anthony Taylor: I just. I just want you guys to to get it. And you're you're

36
00:03:25.260 --> 00:03:31.880
Anthony Taylor: from what I'm seeing. okay and the challenges. we are right on track.

37
00:03:32.380 --> 00:03:37.810
Anthony Taylor: In fact, I think we might even be a bit ahead of where I would have expected you guys to be right now.

38
00:03:38.410 --> 00:03:39.340
Anthony Taylor: Okay.

39
00:03:40.410 --> 00:03:44.840
Anthony Taylor: so I'm super proud of all of you. Keep up the good work.

40
00:03:45.230 --> 00:03:47.200
Anthony Taylor: Alright, let's get to it.

41
00:03:47.890 --> 00:03:52.940
Anthony Taylor: So we have some exciting stuff to do today. This is our last day of campus.

42
00:03:53.140 --> 00:03:55.440
Anthony Taylor: Next week we're gonna start

43
00:03:55.690 --> 00:03:58.300
Anthony Taylor: doing Api consumption.

44
00:04:00.700 --> 00:04:03.540
Anthony Taylor: How many of you are gone? I wonder what an Api is?

45
00:04:04.880 --> 00:04:07.630
Anthony Taylor: Anybody? Everybody knows what Api is.

46
00:04:08.400 --> 00:04:11.180
Anthony Taylor: Meredith does. or you're wondering.

47
00:04:11.980 --> 00:04:17.390
Anthony Taylor: Okay, good. Is anybody not know what Api is?

48
00:04:19.079 --> 00:04:21.689
Anthony Taylor: Oh, good. Okay. Well, somebody to know.

49
00:04:21.880 --> 00:04:27.130
Anthony Taylor: So you'll get to learn about Apis, Mike. Okay, good. You guys are gonna love Apis. They're very, very.

50
00:04:27.630 --> 00:04:32.509
Anthony Taylor: Are you talking to us or somebody else? I see your lips moving.

51
00:04:32.840 --> 00:04:37.790
Mason, Natalie: Oh, I was saying that I don't know that the exact details of what it is, but

52
00:04:39.140 --> 00:04:40.449
Mason, Natalie: I've heard of it.

53
00:04:42.000 --> 00:04:46.050
Anthony Taylor: That's perfect. Well, next week you guys are gonna be experts

54
00:04:46.200 --> 00:04:48.669
Anthony Taylor: at Apis. Okay.

55
00:04:48.970 --> 00:04:55.410
Anthony Taylor: it's gonna be awesome. But let's finish up hand it. So today's an interesting day, we're gonna talk about pivoting.

56
00:04:55.840 --> 00:05:03.400
Anthony Taylor:  is. So why did go one step further? Is anyone unfamiliar

57
00:05:03.650 --> 00:05:06.829
Anthony Taylor: with pivots like from Excel.

58
00:05:07.490 --> 00:05:19.480
Anthony Taylor: You've got columns. They're all going down this way, and you decide you want to pivot and make some of the rows into a column, and then there's values underneath it, typically aggregated in some form or fashion.

59
00:05:19.560 --> 00:05:22.360
Anthony Taylor: It's a very nice way to

60
00:05:22.460 --> 00:05:25.180
Anthony Taylor: read data, and we're going to go through it quite a bit.

61
00:05:25.450 --> 00:05:28.520
Anthony Taylor: I'm going to start with this statement.

62
00:05:28.980 --> 00:05:30.779
Anthony Taylor: in my opinion.

63
00:05:30.810 --> 00:05:35.789
Anthony Taylor: and in my experience pivot is usually something we save for the reporting tool.

64
00:05:36.840 --> 00:05:40.859
Anthony Taylor: Okay? Doesn't mean it doesn't come up.

65
00:05:42.410 --> 00:05:46.069
Anthony Taylor: It does come up. but not a lot

66
00:05:47.560 --> 00:05:55.459
Anthony Taylor: alright. But it's still for the purposes of this class we are teaching you. It's like string format in python.

67
00:05:55.630 --> 00:05:58.910
Anthony Taylor: I had never used a string format python in 30 years.

68
00:05:59.210 --> 00:06:12.310
Anthony Taylor: Okay? Why, yeah. But that's not my reporting tool. I will format it in the tool that is designed to format strings. Alright, but pivot a little different, because sometimes you do want the data in this format.

69
00:06:12.590 --> 00:06:13.420
Anthony Taylor: Alright.

70
00:06:13.680 --> 00:06:17.420
Anthony Taylor:  but you do need it for the challenge.

71
00:06:18.530 --> 00:06:23.920
Anthony Taylor: So let's get to it. So we're different between single and multiple aggregations.

72
00:06:24.370 --> 00:06:27.409
Anthony Taylor: That's going to make a lot of sense and good news is

73
00:06:27.600 --> 00:06:31.360
Anthony Taylor: it's super. I bet you I could just ask you to get.

74
00:06:31.610 --> 00:06:33.959
Anthony Taylor: and half of you would just nail it.

75
00:06:34.370 --> 00:06:39.440
Anthony Taylor: Okay, apply one or more aggregation functions to reshape data. Same thing.

76
00:06:39.480 --> 00:06:42.070
Anthony Taylor: We're going to use an Ag function.

77
00:06:43.110 --> 00:06:47.060
Anthony Taylor: Okay, we already know what ag funk kind of means, right?

78
00:06:47.200 --> 00:06:49.200
Anthony Taylor: Aggregate function.

79
00:06:49.530 --> 00:06:51.489
Anthony Taylor: What are some aggregate functions?

80
00:06:56.210 --> 00:06:59.989
Vasquez, Gabriel: Some some is one. If I gotta

81
00:07:02.580 --> 00:07:03.510
Derek Rikke: mean

82
00:07:04.050 --> 00:07:06.260
Anthony Taylor: mean don't be mean. Derrick

83
00:07:07.700 --> 00:07:08.680
Anthony Taylor: Meredith

84
00:07:09.170 --> 00:07:18.750
Anthony Taylor: join is, would be an aggregate. No aggregate functions. We're adding subtracting medium name, average count some

85
00:07:19.120 --> 00:07:20.109
Anthony Taylor: stuff like that.

86
00:07:20.260 --> 00:07:22.010
Anthony Taylor: Okay, alright, keep you moving.

87
00:07:22.020 --> 00:07:30.360
Anthony Taylor: Use custom, python function. So we're going to basically use Ag, funk and python pi member pivot to and and use our own functions

88
00:07:30.940 --> 00:07:32.270
Anthony Taylor: to aggregate data

89
00:07:32.750 --> 00:07:44.439
Anthony Taylor: or a reshape for multi index and apply more aggregations, which is actually really kind of cool. And then, last, but not least, we're going to use melt, which is kind of funny.

90
00:07:44.650 --> 00:07:50.939
Anthony Taylor: Here's what Melt is in in a nutshell. We're going to pivot the data. We're going to melt it back down into columns again.

91
00:07:52.350 --> 00:07:53.320
Anthony Taylor: Okay?

92
00:07:53.630 --> 00:08:05.320
Anthony Taylor: But you may think well, that sounds pointless, but it's actually not. That is the one thing that I do see get used in really cool scenarios from engineers in science.

93
00:08:06.100 --> 00:08:07.930
Anthony Taylor: Okay? So anyway.

94
00:08:07.970 --> 00:08:13.590
Anthony Taylor: pivot tables allow us to update summarize data based on specific requirements

95
00:08:15.050 --> 00:08:18.679
Anthony Taylor: providing the potential for high level overview of data at a glance. Yep.

96
00:08:19.130 --> 00:08:23.839
Anthony Taylor: okay. this is a silly definition. But you're going to see it in just a second.

97
00:08:24.300 --> 00:08:27.219
Anthony Taylor: We're going to use pandas pivot.

98
00:08:27.680 --> 00:08:36.540
Anthony Taylor: We're going to pass in the data frame the columns, maybe. Okay, what index column? We want to do, what values we want to.

99
00:08:36.880 --> 00:08:46.430
Anthony Taylor: Alright or we can just pass in the data frame dot pivot. the columns, the index and the values. So looking at this.

100
00:08:47.930 --> 00:08:51.740
Anthony Taylor: we have Pd dot pivot. Here's our data frame. Okay.

101
00:08:51.880 --> 00:08:59.350
Anthony Taylor: we're going to say for columns. I want you to use date ending. So what does that mean? So looking, this is the pivot table down here on the bottom.

102
00:08:59.580 --> 00:09:00.510
Anthony Taylor: Okay?

103
00:09:01.040 --> 00:09:05.840
Anthony Taylor: So the columns in this case are these date values.

104
00:09:07.330 --> 00:09:13.090
Anthony Taylor: Underneath these date values we have some value.

105
00:09:13.550 --> 00:09:17.710
Anthony Taylor: And on the left, in our index. We have the book name.

106
00:09:17.730 --> 00:09:26.950
Anthony Taylor: So what does this say? So then it says, for values. And that's this block down here at the bottom, all the numbers we want total, save now

107
00:09:28.080 --> 00:09:34.399
Anthony Taylor: this is a very simple example. The total sales were already calculated for us alright, but

108
00:09:34.850 --> 00:09:42.120
Anthony Taylor: and and and I wish they had? Do they have an example of the actual data? No, we'll see it in the demo.

109
00:09:42.280 --> 00:09:49.890
Anthony Taylor: But the actual data. There is a column for book name a column for date ending, and then one column for each total sales.

110
00:09:50.660 --> 00:09:59.129
Anthony Taylor: All this did was allow us to look at it so we can go. Oh, well, on 1130 Foundation Empire at 60 total sales.

111
00:10:00.870 --> 00:10:02.989
Anthony Taylor: Alright, it's really nice.

112
00:10:03.180 --> 00:10:06.150
Anthony Taylor: Very high level stuff. Okay?

113
00:10:06.530 --> 00:10:08.730
Anthony Taylor: Another.

114
00:10:08.940 --> 00:10:10.560
Anthony Taylor: method to do pivot

115
00:10:10.740 --> 00:10:23.460
Anthony Taylor: is, we can do well. Actually, this is the same method. But notice, it's slightly different. Instead of column, date, ending and book name index. We did columns, book, name and index date ending.

116
00:10:24.300 --> 00:10:25.370
Anthony Taylor: And then.

117
00:10:25.880 --> 00:10:34.020
Anthony Taylor: so you can see the top. The the columns are going to be by book, and then the dates are by index. Now, there's something interesting about this.

118
00:10:34.780 --> 00:10:36.780
Anthony Taylor: and I wonder if anybody notices.

119
00:10:37.440 --> 00:10:43.719
Anthony Taylor: Both of them had the same problem. But it's an interesting thing. And look at the pivot table. Is there something weird about it?

120
00:10:49.210 --> 00:10:50.869
Dipinto, Matt: The date and order?

121
00:10:51.690 --> 00:10:55.889
Anthony Taylor: Aha! That nailed it? Was that what you're gonna say, Meredith.

122
00:10:56.350 --> 00:11:02.500
Anthony Taylor: that the the order is bizarre. right? It's like what the heck well, and this is just

123
00:11:03.580 --> 00:11:04.730
Anthony Taylor: a problem with it.

124
00:11:05.000 --> 00:11:10.849
Anthony Taylor: So what you will do and I'll show you in the example is, you would basically resort these columns.

125
00:11:11.310 --> 00:11:16.229
Anthony Taylor: Okay, to be in numeric quarter. And then the same problem is happening here.

126
00:11:17.750 --> 00:11:28.020
Anthony Taylor: So here you would just basically reset the index. And it would sort those for you. Okay, it's just a issue, admitted. Okay?

127
00:11:29.200 --> 00:11:33.730
Anthony Taylor: Well, here's oh, I like that. They did this. This is nice. So everything

128
00:11:33.860 --> 00:11:41.090
Anthony Taylor: the pivot. This is all the arguments that are possible. So you got data, you got values, that index columns act functions.

129
00:11:41.280 --> 00:11:42.600
Anthony Taylor: Still, though.

130
00:11:43.700 --> 00:11:50.680
Anthony Taylor: Okay? So like, if you say date and book. But one of them doesn't, doesn't have a record at all. What are you gonna put there?

131
00:11:51.520 --> 00:11:56.320
Anthony Taylor: Usually 0. Margins drop in a

132
00:11:56.720 --> 00:11:59.570
Anthony Taylor:  barge's name

133
00:11:59.790 --> 00:12:06.120
Anthony Taylor: and observe false and sort equals. True. Okay? So we got lots of cool options in there.

134
00:12:06.500 --> 00:12:11.620
Anthony Taylor:  okay, so that was, I'm sorry. That was the pivot

135
00:12:11.740 --> 00:12:17.700
Anthony Taylor: function. Okay, that just pivots the data by itself. Pivot tables. Technically, this is new.

136
00:12:17.720 --> 00:12:19.749
Anthony Taylor: But it looks very similar.

137
00:12:20.560 --> 00:12:23.359
Anthony Taylor: Okay? So you have the data frame.

138
00:12:23.370 --> 00:12:31.740
Anthony Taylor: The values in this case total sales the columns. The only thing you don't see here in this particular example is the index.

139
00:12:32.200 --> 00:12:34.210
Anthony Taylor: And that's because there's just one row, anyway.

140
00:12:34.940 --> 00:12:39.109
Anthony Taylor: Why is there only one row? Look what we're saying in the aggregation function?

141
00:12:40.130 --> 00:12:41.380
Anthony Taylor: Sum it all up.

142
00:12:42.640 --> 00:12:43.650
Anthony Taylor: Okay?

143
00:12:44.260 --> 00:12:47.819
Anthony Taylor: And because it's summed all up, there's only one out

144
00:12:49.700 --> 00:12:52.159
Anthony Taylor: alright. Can I ask a question?

145
00:12:52.340 --> 00:13:00.609
Mccanse, Meredith: Is that they look so similar to just using the pivot function. Is there a reason you would use one over the other?

146
00:13:01.340 --> 00:13:03.709
Anthony Taylor: This one is giving you an index.

147
00:13:05.310 --> 00:13:07.310
Anthony Taylor: Sally, you have the index over here.

148
00:13:07.480 --> 00:13:14.880
Anthony Taylor:  Okay? And then this one. It still has an index. But you don't call it out because of the way this is working.

149
00:13:15.550 --> 00:13:19.200
Anthony Taylor: Pivot table is used more for

150
00:13:19.410 --> 00:13:23.220
Anthony Taylor: aggregations. I wanna actually check that. 1. Second

151
00:13:35.150 --> 00:13:43.779
Anthony Taylor: dates are the index. They're not sorted pivot table using pivot table function on our book sales data. Can we show total book sales for you should follow.

152
00:13:44.200 --> 00:13:45.580
Anthony Taylor: So yeah.

153
00:13:46.300 --> 00:13:54.309
Anthony Taylor: pivot table function provides an alternative way of reshaping the data. It does provide more versatility than using just pivot.

154
00:13:54.920 --> 00:13:57.170
Anthony Taylor: Okay? So you actually.

155
00:13:57.440 --> 00:14:00.649
Anthony Taylor: I don't know that there is a good reason to use the one over the other.

156
00:14:01.050 --> 00:14:15.099
Anthony Taylor: Okay, there is an option to specify which column is. The index

157
00:14:15.330 --> 00:14:21.060
Anthony Taylor: is, we're always going to be just doing add functions. And I don't know if you have to. Yeah, please

158
00:14:22.880 --> 00:14:23.980
Anthony Taylor: didn't beep.

159
00:14:24.040 --> 00:14:27.999
Clayton Graves: I'm looking at those those dates from the previous slide.

160
00:14:28.450 --> 00:14:31.819
Clayton Graves: and we talked about how they were out of order.

161
00:14:32.050 --> 00:14:42.309
Clayton Graves: They're not. That's how a system would organize them if you go back and go back to. That's so. Is there a way to sort that

162
00:14:42.680 --> 00:14:49.899
Anthony Taylor: I'm gonna show you in the demo, but not easily, because you're right. It 1 0 is

163
00:14:50.180 --> 00:14:53.139
Anthony Taylor: new is lower than one. What

164
00:14:53.610 --> 00:14:59.430
Anthony Taylor: right and 1, 2, and then 8 is higher than one and 9 is higher than 8.

165
00:14:59.710 --> 00:15:16.950
Dipinto, Matt: So I had this problem that work like 2 days ago. And I just function that went through every file title in this case. And it just tacked to zeros on, dependent on the length of the name. So in this case it would have just made it 0 8 and 0 9 and then sorted properly.

166
00:15:19.060 --> 00:15:22.009
Anthony Taylor: Okay, that's a good way to do it. I like it.

167
00:15:22.430 --> 00:15:26.090
Anthony Taylor:  that's good. I like it.

168
00:15:26.610 --> 00:15:30.190
Anthony Taylor: Okay. So here we're gonna do more

169
00:15:30.200 --> 00:15:31.640
Anthony Taylor: ag functions.

170
00:15:32.290 --> 00:15:36.250
Anthony Taylor: Nothing else has changed. We just made it. We want some. And me.

171
00:15:37.270 --> 00:15:39.559
Anthony Taylor: So it made 2 rows.

172
00:15:39.570 --> 00:15:40.720
Anthony Taylor: meaning some.

173
00:15:42.120 --> 00:15:50.060
Anthony Taylor: Okay. we're almost done with these, I promise and then you can even change like

174
00:15:50.290 --> 00:15:58.390
Anthony Taylor: like a formatting type function. So we have our pivot table index. The ending value total sales add function.

175
00:15:59.260 --> 00:16:03.609
Anthony Taylor: 2 of them, but we want to round them to one digit.

176
00:16:05.260 --> 00:16:13.300
Dipinto, Matt: That's it. I is only the mean rounded to one digit, and the sum is because clearly, if it was a whole number 0 1,

177
00:16:13.570 --> 00:16:15.830
Dipinto, Matt: okay, so they're not floats.

178
00:16:16.130 --> 00:16:24.370
Anthony Taylor: Yeah, yeah. Mean comes back with it, returns a float and inch, since it does not return a float, it it won't. The ground won't have anything.

179
00:16:25.120 --> 00:16:25.830
Dipinto, Matt: Thank you.

180
00:16:26.080 --> 00:16:27.310
Anthony Taylor: Good question.

181
00:16:28.880 --> 00:16:31.560
Anthony Taylor: Alright. Let's go look at this in action.

182
00:16:33.510 --> 00:16:35.760
Anthony Taylor: So we're on the

183
00:16:36.680 --> 00:16:41.170
Anthony Taylor: instructor, pivot number one. We're going to bring in our cool pandas

184
00:16:41.190 --> 00:16:43.150
Anthony Taylor: and some nice data.

185
00:16:43.350 --> 00:16:49.829
Anthony Taylor: So here we have bookmade date ending total sales exactly what we're just talking about. But here you can see in its raw format

186
00:16:50.270 --> 00:16:52.930
Anthony Taylor: there's nothing wrong with this perfect.

187
00:16:53.210 --> 00:16:56.829
Anthony Taylor: Could we group by book and some on total sales. Yes, we

188
00:16:57.490 --> 00:17:02.700
Anthony Taylor: do. We group by book and date ending and some on total sales. Yes, we could.

189
00:17:03.730 --> 00:17:06.930
Anthony Taylor: Okay, but we're gonna do the pivot instead.

190
00:17:07.030 --> 00:17:16.700
Anthony Taylor: So first, let's get all the unique book names. This is just for our own interests. Okay, we have didn't give us the shape. But

191
00:17:16.990 --> 00:17:20.309
Anthony Taylor:  actually let me see some. Maybe it will here.

192
00:17:22.050 --> 00:17:22.819
Anthony Taylor: Oh.

193
00:17:25.190 --> 00:17:26.060
Anthony Taylor: turn it.

194
00:17:27.140 --> 00:17:28.970
Anthony Taylor: What was it called

195
00:17:29.690 --> 00:17:34.439
Anthony Taylor: book sales? Df, there it is, so it's got 45 rows

196
00:17:34.950 --> 00:17:36.440
and 3 columns.

197
00:17:36.790 --> 00:17:40.399
Anthony Taylor: Okay? And of those 45 rows

198
00:17:40.570 --> 00:17:44.340
Anthony Taylor: we can see, there's there's a few. Okay.

199
00:17:44.600 --> 00:17:47.540
Anthony Taylor:  but not 45.

200
00:17:47.850 --> 00:17:57.430
Anthony Taylor: So we can also get the ending dates, the unique ending dates that we have in the 45 rows. There's only 4.

201
00:17:58.250 --> 00:18:05.399
Anthony Taylor: And now we're going to use pivot, not pivot table. But pivot. So pivot dates. So that we're gonna do this, we're gonna stay

202
00:18:05.990 --> 00:18:14.200
Anthony Taylor: pivot book sales data frame. That's the data frame. We have the columns. This is the up above, on top of the pivot table.

203
00:18:14.330 --> 00:18:17.039
Anthony Taylor: The index is the farthest left.

204
00:18:17.890 --> 00:18:22.280
Anthony Taylor: Okay? So now we have our X and our Y, okay.

205
00:18:22.310 --> 00:18:28.019
Anthony Taylor: And then the values. And this will be in this case just this column, and that's it.

206
00:18:28.490 --> 00:18:32.890
Anthony Taylor: and it'll fill it all out, and then we'll show it. And it looks like that.

207
00:18:34.270 --> 00:18:35.660
Anthony Taylor: Okay, yes, I.

208
00:18:36.360 --> 00:18:42.509
Sonja Baro (she/hers): So on the actual table structure and the variables are that you're sending in.

209
00:18:42.950 --> 00:18:51.449
Sonja Baro (she/hers): There's just a minimum, right? You need to have an X and a y, and at least one value. Right? So 3.

210
00:18:52.000 --> 00:19:00.400
Sonja Baro (she/hers): Is there a max like cause? We had on the other example, some. And then other types of aggregations happening.

211
00:19:00.790 --> 00:19:03.480
Sonja Baro (she/hers): Is that a pivot table? We can add, all of

212
00:19:04.640 --> 00:19:06.440
Sonja Baro (she/hers): you can add whatever.

213
00:19:06.490 --> 00:19:09.100
Anthony Taylor: And they're gonna table. What? Yeah.

214
00:19:09.450 --> 00:19:21.339
Anthony Taylor: yeah, let's do that again. Yes.

215
00:19:21.880 --> 00:19:28.930
Clayton Graves: is pivot on sort of a key phrase. There, that that tells us, okay, that's gonna be my call

216
00:19:29.230 --> 00:19:34.090
Anthony Taylor: absolutely. If they say, pivot. The date on date, ending with book name as index.

217
00:19:34.500 --> 00:19:38.719
Anthony Taylor: That date ending is the column, and then index is that, and then

218
00:19:38.890 --> 00:19:47.159
Clayton Graves: then past total sales is value. But that was kind of clear, but was self explanatory wasn't sure about the

219
00:19:47.920 --> 00:19:56.700
Anthony Taylor: that is a great point. It's kind of like when we're talking about group by. you know. Tell us the total sales by. okay.

220
00:19:57.460 --> 00:20:05.170
Anthony Taylor: okay, so okay, and here's how. Here's any way, it's not as cool as maps of the program.

221
00:20:05.960 --> 00:20:06.960
Anthony Taylor: However.

222
00:20:07.520 --> 00:20:11.940
Anthony Taylor: you can come in here and manually select the column

223
00:20:12.350 --> 00:20:14.140
Anthony Taylor: right by index.

224
00:20:14.290 --> 00:20:16.769
Anthony Taylor: and then boop, boop, boop and do that.

225
00:20:17.990 --> 00:20:18.990
Anthony Taylor: Okay.

226
00:20:20.640 --> 00:20:25.910
Anthony Taylor: there's a cool way to do this in spark, though that's closer to what Matt does. That's how I would do.

227
00:20:27.190 --> 00:20:32.490
Anthony Taylor: Oh. okay, so here we're just going to flip it the other way. So instead of

228
00:20:33.150 --> 00:20:37.590
Anthony Taylor: dates and books, we're gonna do books and dates.

229
00:20:38.120 --> 00:20:42.950
Anthony Taylor: and we end up with it. Okay? And again, our dates are Jack.

230
00:20:42.990 --> 00:20:54.259
Anthony Taylor: however, because we made them an index this time. We can just we can look at it. Say, Oh, that's wrong. but we can re-index. Well, you start to pass it in

231
00:20:54.360 --> 00:20:57.770
Anthony Taylor: so you can pass it in and re-index it.

232
00:20:57.850 --> 00:21:01.060
Anthony Taylor: and it fixes it that okay.

233
00:21:02.450 --> 00:21:04.770
Anthony Taylor: alright. that's pivot

234
00:21:06.020 --> 00:21:07.260
Anthony Taylor: now.

235
00:21:08.440 --> 00:21:09.759
Anthony Taylor: So and here you go.

236
00:21:10.270 --> 00:21:13.930
Anthony Taylor: So here's our pivot table function.

237
00:21:13.970 --> 00:21:25.359
Anthony Taylor: We're going to pass in our data frame. Same data frame is up above. Our values are totally so. All. The only thing missing here is the index. but that's partly because we only have one add function anyway.

238
00:21:25.760 --> 00:21:30.660
Anthony Taylor: Alright. So when we sum it up, we just get one row. See? There's no index.

239
00:21:32.430 --> 00:21:33.500
Anthony Taylor: Okay.

240
00:21:34.150 --> 00:21:39.680
Anthony Taylor:  parents do the same thing this time with average. So we'll get a mean

241
00:21:39.900 --> 00:21:40.920
same thing.

242
00:21:42.470 --> 00:21:43.260
Anthony Taylor: Okay.

243
00:21:44.010 --> 00:21:51.250
Anthony Taylor: now, we could, because this line right here, we don't like it, because notice it says total sales. Now.

244
00:21:52.570 --> 00:21:53.929
Anthony Taylor: is that what this is?

245
00:21:55.730 --> 00:22:03.100
Anthony Taylor: No, we specifically said, mean, however, it gives it the name of the column that it's using for the values.

246
00:22:03.200 --> 00:22:05.470
Anthony Taylor: So you can come in here and do a rename

247
00:22:05.630 --> 00:22:12.320
Anthony Taylor: and since this is the index, not a column. You could rename it using the index.

248
00:22:12.850 --> 00:22:14.690
Anthony Taylor: And you can get it right that way.

249
00:22:15.230 --> 00:22:16.000
Anthony Taylor: Okay.

250
00:22:18.610 --> 00:22:23.059
Anthony Taylor: so that was very similar to one up top except we added an aggregation function.

251
00:22:23.390 --> 00:22:28.500
Anthony Taylor: So now. same thing except this time. Gonna do 2.

252
00:22:30.370 --> 00:22:42.550
Anthony Taylor: You just put them in parentheses and move on. Do as many as you want. Okay. but they're all gonna be based on total sales. Buy book, me?

253
00:22:43.890 --> 00:22:48.150
Anthony Taylor: And you can see now you have to again. You have these weird

254
00:22:48.720 --> 00:22:54.059
Anthony Taylor: follow. Had our row names in this case? Which, of course

255
00:22:54.220 --> 00:23:00.209
Anthony Taylor: you can. Fix with the rename. which I don't think we do here.

256
00:23:02.170 --> 00:23:05.139
Anthony Taylor: So you can also pass index

257
00:23:05.600 --> 00:23:09.030
Anthony Taylor: into. Now, this one's a little bit interesting.

258
00:23:09.130 --> 00:23:15.530
Anthony Taylor: So notice we're passing index in. So we know that's going to be this first call.

259
00:23:16.470 --> 00:23:19.709
Anthony Taylor: But notice, we're not passing in columns.

260
00:23:24.180 --> 00:23:31.050
Anthony Taylor: Why? Because we're doing mean and sum of total sales. So the column names are going to be mean and sum.

261
00:23:32.080 --> 00:23:44.840
Anthony Taylor: Then you have to go and rename them, plus. You have to resort your index to get it right, and then that's what you might want. So, could you have done all this with group bite? Yes. okay. okay. But

262
00:23:44.990 --> 00:23:48.170
Anthony Taylor: there's some advantages to this. It's handy.

263
00:23:49.060 --> 00:23:51.510
Anthony Taylor: Okay. it's good to know.

264
00:23:52.820 --> 00:23:53.790
Anthony Taylor: Question.

265
00:23:57.490 --> 00:24:00.719
Anthony Taylor: have you never worked with a pivot table before I could see how this would

266
00:24:00.870 --> 00:24:05.790
Anthony Taylor: bug your brain a little bit if you have this could be like, Oh, yeah, I know what that is.

267
00:24:06.170 --> 00:24:11.929
Anthony Taylor: Okay. But don't worry too much. These, the the activity

268
00:24:12.090 --> 00:24:13.330
Anthony Taylor: pretty much

269
00:24:14.460 --> 00:24:17.029
Anthony Taylor: structure on one side you do on the other.

270
00:24:17.180 --> 00:24:31.640
Anthony Taylor: Do the activity. You'll be fine. Okay? So you're gonna read in this file you're going to. I love like I call you reshape it for each subject. The columns are the subject, and the values are the scores

271
00:24:33.470 --> 00:24:37.680
Anthony Taylor: rename, the index to average subject and round results to one decimal

272
00:24:38.980 --> 00:24:44.250
Anthony Taylor: reshape, the data frame to show minimum and maximum. These are aggregate functions. Guys

273
00:24:46.160 --> 00:24:54.720
Anthony Taylor: reshape it to show the average score of each student across all subjects. rename the index, the index to average student's car

274
00:24:55.090 --> 00:24:59.109
Anthony Taylor: data frame to show each student's exam score for each subject.

275
00:24:59.550 --> 00:25:02.880
Anthony Taylor: The students names are the columns

276
00:25:03.320 --> 00:25:06.109
Anthony Taylor: and the subjects are the index.

277
00:25:06.980 --> 00:25:14.560
Anthony Taylor: Okay. they more or less are telling you what to do. Okay, but use the example. It would be fine.

278
00:25:14.890 --> 00:25:19.059
Anthony Taylor:  15 min for this one.

279
00:25:21.720 --> 00:25:23.260
Anthony Taylor: The Boo.

280
00:25:26.450 --> 00:25:29.830
Anthony Taylor: Let's try that again. Import pandas.

281
00:25:31.170 --> 00:25:37.499
Anthony Taylor: That one's an easy one. Let's get our data that should have been straightforward. We're that's 2 sales done.

282
00:25:37.950 --> 00:25:38.970
Anthony Taylor: Okay.

283
00:25:39.230 --> 00:25:45.510
Anthony Taylor: very similar to the data I had with book date and total sales. Huh?

284
00:25:46.570 --> 00:25:49.330
Anthony Taylor: Okay. so pivot table.

285
00:25:49.820 --> 00:25:55.790
Anthony Taylor: they're not even using pivot in this like entire example. Alright. So

286
00:25:55.840 --> 00:25:56.960
Anthony Taylor: pivot table.

287
00:25:57.330 --> 00:26:00.909
Anthony Taylor: the exams forms data frame that makes sense. And it said.

288
00:26:01.940 --> 00:26:11.759
Anthony Taylor: so, the average exam score for each subject. So our values. Sam score our columns or subject average means mean.

289
00:26:11.960 --> 00:26:16.019
Anthony Taylor: And then they're gonna rename right away. You didn't have to do that. But

290
00:26:16.360 --> 00:26:19.069
Anthony Taylor: unless it told you to, I guess it did. Huh?

291
00:26:20.070 --> 00:26:22.400
Anthony Taylor: Okay. pretty cool.

292
00:26:24.500 --> 00:26:25.729
Anthony Taylor: Everybody got that one

293
00:26:27.220 --> 00:26:28.290
Anthony Taylor: nice.

294
00:26:28.660 --> 00:26:38.250
Anthony Taylor: So here we're gonna use same function says, show the minimum and maximum score. So this is the same example as I showed you. It's the exact same code, except

295
00:26:38.320 --> 00:26:42.059
Anthony Taylor: we're going to pass in 2 aggregate functions.

296
00:26:43.040 --> 00:26:44.050
Anthony Taylor: Alright.

297
00:26:44.160 --> 00:26:54.590
Anthony Taylor: The only thing I don't like about this bugs me everywhere else will be passing more than one value. We use the double square brackets. And then here we're using

298
00:26:55.050 --> 00:26:56.850
Anthony Taylor: parentheses, whatever.

299
00:26:57.080 --> 00:26:57.940
Anthony Taylor: Okay.

300
00:27:00.520 --> 00:27:03.819
Anthony Taylor: alright. And then you get both your min and your Max

301
00:27:04.840 --> 00:27:05.800
Anthony Taylor: pretty cool.

302
00:27:07.850 --> 00:27:13.169
Anthony Taylor: Okay, it says, using pivot table function show the average score. So we know we're going to use mean

303
00:27:13.320 --> 00:27:25.369
Anthony Taylor: for each student. So we know student name is going to be columns. And then we went across all subjects.  and that's it. So we have

304
00:27:25.480 --> 00:27:30.809
Anthony Taylor: our exam score. We have values per score. Average score columns are student name.

305
00:27:31.050 --> 00:27:39.659
Anthony Taylor: It's going to give us subjects, and we want the average. And then it has its rename. So there, you see that?

306
00:27:39.990 --> 00:27:42.409
Anthony Taylor: Oh, well, it's not gonna give it. You understand what

307
00:27:42.570 --> 00:27:45.800
Anthony Taylor: we're averaging up the total score for all subjects.

308
00:27:47.560 --> 00:27:55.279
Anthony Taylor: Alright. So here you got the maximum. It's the same thing. It's the exact same thing. All we're doing is changing

309
00:27:56.140 --> 00:27:59.930
Anthony Taylor: our our arguments, going into it. Okay?

310
00:28:00.370 --> 00:28:03.330
Anthony Taylor: So it's by student name. Now set it by subject.

311
00:28:04.490 --> 00:28:08.020
And then here we have the index will be subject.

312
00:28:09.380 --> 00:28:14.310
Anthony Taylor: The columns will be student, score, student name and the values so

313
00:28:14.490 --> 00:28:16.689
Anthony Taylor: they could have used pivot here, right?

314
00:28:17.760 --> 00:28:24.239
Anthony Taylor: But as we talked about earlier, whatever reason, they showed us pivot, and then said, pivot to tables. A better way to go.

315
00:28:24.910 --> 00:28:25.620
There you go.

316
00:28:25.870 --> 00:28:30.049
Anthony Taylor: It does say you can use either one in the example. but there's your result.

317
00:28:32.110 --> 00:28:35.860
Anthony Taylor: So how do we do with this? Everybody get through it? Where'd you get stuck?

318
00:28:39.950 --> 00:28:41.350
Anthony Taylor: Nobody got sucked.

319
00:28:41.730 --> 00:28:47.180
michael mcpherson: We got stuck, cause I mixed Pd. And Df. At the beginning of mine

320
00:28:47.190 --> 00:28:53.509
michael mcpherson: that's common. You'll that's one of those things that you'll remember eventually.

321
00:28:53.860 --> 00:28:59.910
michael mcpherson: Well, I've been doing it the other way. So pivot exam df equals exam.

322
00:29:00.000 --> 00:29:07.979
michael mcpherson: df, dot pivot table instead of Pd, dot, you can do that. Oh, yeah, you can do that. Yeah, that should have been fine.

323
00:29:08.400 --> 00:29:14.960
michael mcpherson: Okay? So instead of putting it there. Yeah, instead of putting it inside. And so

324
00:29:16.420 --> 00:29:17.779
michael mcpherson: Brandon and I were like.

325
00:29:17.860 --> 00:29:23.160
michael mcpherson: no cause. Here it goes. There he goes in. It goes out like we never got past that. Sorry.

326
00:29:24.890 --> 00:29:27.140
Clayton Graves: We're both trying to do the same thing backwards

327
00:29:27.720 --> 00:29:32.989
Clayton Graves: all the way through, because it takes me a bit to figure things out.

328
00:29:46.580 --> 00:29:48.170
Anthony Taylor: Who else was in yah's group?

329
00:29:49.840 --> 00:29:52.489
Masarirambi, Rodney: It was Clayton Clayton and myself.

330
00:29:53.450 --> 00:29:55.290
Anthony Taylor: Wait. What?

331
00:29:57.210 --> 00:29:59.379
Anthony Taylor: Alright? Well, that was okay.

332
00:29:59.440 --> 00:30:05.230
Anthony Taylor: That's good. I'm glad you guys worked. Alright. Let's continue.

333
00:30:09.590 --> 00:30:16.499
Anthony Taylor: Multi-index. alright. So in this example.

334
00:30:19.220 --> 00:30:22.060
Anthony Taylor: Multi-indexing is pretty much like it sound.

335
00:30:22.450 --> 00:30:26.159
Anthony Taylor: It's kind of similar to grouping by more than one column.

336
00:30:26.740 --> 00:30:40.010
Anthony Taylor: Alright. So here we have the Ufo sightings data. Remember, every time we've read this, it's I don't know. Like a week or 2 ago we do all this little quick cleanup and make it look nice. Alright. So it's the same cleanup

337
00:30:40.140 --> 00:30:47.459
Anthony Taylor: we're reading it in dropping in A's converting seconds to float and showing you the data.

338
00:30:48.700 --> 00:30:52.509
Anthony Taylor: So the single index. This is exactly what we've been doing.

339
00:30:52.540 --> 00:30:57.250
Anthony Taylor: We've got our data frame column that we want to

340
00:30:58.160 --> 00:30:59.220
groupon.

341
00:30:59.340 --> 00:31:05.609
Anthony Taylor: Okay, the values. And then we want the average. So we're gonna do the mean, we're gonna round it.

342
00:31:05.980 --> 00:31:06.890
Anthony Taylor: Bam.

343
00:31:08.790 --> 00:31:13.000
Anthony Taylor: Okay? So multi-index same thing.

344
00:31:13.090 --> 00:31:18.459
Anthony Taylor: Well, well, in this case we didn't need an index because we're using

345
00:31:18.660 --> 00:31:23.829
Anthony Taylor: the average as our index. So here we're gonna say, Hey, I want you

346
00:31:23.950 --> 00:31:34.200
Anthony Taylor: to give me the average seconds for each country and state so index, pass them in notice. There's square brackets this time.

347
00:31:35.380 --> 00:31:36.450
Anthony Taylor: Okay.

348
00:31:36.460 --> 00:31:45.350
Anthony Taylor: the values. And then your ad function. which all this means is that your columns are now going to be your add function.

349
00:31:46.270 --> 00:31:48.199
Anthony Taylor: So you'll see this is the mean

350
00:31:49.360 --> 00:31:53.840
Anthony Taylor: alright, but it's by country. Then state country, then state

351
00:31:54.830 --> 00:31:55.750
Anthony Taylor: alright.

352
00:31:57.750 --> 00:31:59.769
Anthony Taylor: Notice, we can also do 3.

353
00:32:01.430 --> 00:32:06.389
Anthony Taylor: And this one, we're gonna do this. We're gonna do the shape of Ufo and how many each one.

354
00:32:08.130 --> 00:32:10.229
Anthony Taylor: So there you go. Look at that.

355
00:32:11.470 --> 00:32:14.450
Anthony Taylor: Only thing that's weird about this

356
00:32:14.550 --> 00:32:17.189
Anthony Taylor: is, it doesn't say what the shape is.

357
00:32:19.640 --> 00:32:21.849
Anthony Taylor: Alright. This is a pretty weird table.

358
00:32:24.810 --> 00:32:26.330
Anthony Taylor: It's just a shape.

359
00:32:28.210 --> 00:32:34.600
Anthony Taylor: Okay. So here we're gonna do the same. But notice, we're not gonna sort this time.

360
00:32:34.940 --> 00:32:44.099
Anthony Taylor: Well, let's be specific. Says we're going to intentionally say, sort equals false to go in descending order. So right now

361
00:32:45.760 --> 00:32:47.559
Anthony Taylor: it's going in

362
00:32:49.300 --> 00:32:50.400
Anthony Taylor: no order.

363
00:32:50.880 --> 00:32:59.570
Anthony Taylor: Alright. So by putting short equals false, we should go into sending order. Now, when you first look at that, they're like got app broken. No.

364
00:32:59.740 --> 00:33:01.180
Anthony Taylor: it's by.

365
00:33:01.800 --> 00:33:10.729
Anthony Taylor: So in this group, US. Texas, San Marcos there was a 20 and US. Texas, Edna, there was a 3,

366
00:33:12.170 --> 00:33:13.289
Anthony Taylor: and that sort

367
00:33:14.310 --> 00:33:16.129
Anthony Taylor: I'm sure there's more. If we looked in

368
00:33:16.980 --> 00:33:21.229
Anthony Taylor: here we're gonna rename it from shape to Ufo sightings.

369
00:33:24.230 --> 00:33:28.200
Anthony Taylor: and then we're gonna sort it again, sort it with sort values

370
00:33:28.340 --> 00:33:37.540
Anthony Taylor: which we've used before. So now you can see it from top to bottom. we can see who the biggest one was which I mean.

371
00:33:41.190 --> 00:33:44.870
Anthony Taylor: Oh, look! San Antonio made the cut.

372
00:33:48.020 --> 00:33:58.170
Anthony Taylor: Okay. alright. And then last multi aggregator. So look at this guys everything we've talked about. All in one period of time. We've got 2 indexes.

373
00:33:58.570 --> 00:34:02.020
Anthony Taylor: We've got values. We have 2 aggregators

374
00:34:02.670 --> 00:34:04.540
Anthony Taylor: doesn't really change a whole lot.

375
00:34:08.790 --> 00:34:09.719
Anthony Taylor: So

376
00:34:11.090 --> 00:34:17.280
Anthony Taylor: let's talk about what we just talked. Okay? Cause when I summarize, summarize it down to what we just did.

377
00:34:17.300 --> 00:34:25.130
Anthony Taylor: what I just changed. This should be pretty easy. I added. 2 things. just 2.

378
00:34:26.139 --> 00:34:34.409
Anthony Taylor: Okay. Only 2 things, we added. was, we can use the we can use more than one column as an index.

379
00:34:37.840 --> 00:34:43.220
Anthony Taylor: Let me restate that we can use 2 columns as an index. Oh, and

380
00:34:44.130 --> 00:34:50.460
Anthony Taylor: technically, or we can use 3 columns as an index. That's all I changed.

381
00:34:51.679 --> 00:34:53.709
Anthony Taylor: Suppose this sort is kind of neat.

382
00:34:56.239 --> 00:34:57.180
Anthony Taylor: But that's it.

383
00:34:58.880 --> 00:35:01.950
Anthony Taylor: So we did. Okay, Anthony.

384
00:35:02.340 --> 00:35:14.349
Sonja Baro (she/hers): yeah, okay, is that although when you do that. It's gonna only be on the index. Well, cause that's what we learned. But I'm wondering, can you add more of the aggregating functions.

385
00:35:14.600 --> 00:35:26.860
Anthony Taylor: of course. Well, that's what we did. So we had to, but we did did, but we did this in the last exercise, too. So so this was a new.

386
00:35:27.490 --> 00:35:31.090
Anthony Taylor: but it's new if you combine it with multi-index.

387
00:35:33.430 --> 00:35:35.320
Anthony Taylor: That's good. I like it.

388
00:35:36.300 --> 00:35:41.760
Anthony Taylor: Hi, guys. So that's it. So let's give you an activity to do with that.

389
00:35:42.800 --> 00:35:44.589
Anthony Taylor: So you're gonna read in vehicles.

390
00:35:44.840 --> 00:35:50.930
Anthony Taylor: You're gonna reshape it. I love that. You can't reshape it. I mean, it is reshaping. But it's interesting.

391
00:35:51.120 --> 00:36:01.479
Anthony Taylor: But You want to show the number of vehicles for each model and make. Here's your indexes. Then rename the count column to total

392
00:36:04.570 --> 00:36:08.010
Anthony Taylor: this one. You're going to do each model, make a year

393
00:36:09.030 --> 00:36:10.050
Anthony Taylor: same count.

394
00:36:11.250 --> 00:36:14.310
Anthony Taylor: Okay? And then sort it

395
00:36:15.120 --> 00:36:22.490
Anthony Taylor: this one total number of vehicles for each category in year, pretty much the same as this except

396
00:36:22.570 --> 00:36:23.850
Anthony Taylor: category. And

397
00:36:25.210 --> 00:36:34.660
Anthony Taylor: and then category modeling. It's like the same thing over and over again. with just a little tweak. Alright gay

398
00:36:36.000 --> 00:36:42.920
Anthony Taylor: a I'm sure it's gonna be 15 min. But I don't want to tell you wrong.

399
00:36:44.680 --> 00:36:46.070
Anthony Taylor: It is

400
00:36:48.060 --> 00:36:48.800
that got it.

401
00:36:50.330 --> 00:36:51.660
Anthony Taylor: I didn't want to do that

402
00:36:53.500 --> 00:36:54.670
Anthony Taylor: 15 min.

403
00:36:59.140 --> 00:37:01.540
Anthony Taylor: Yeah. Exercise for 15 min.

404
00:37:03.100 --> 00:37:05.439
Anthony Taylor: Oh, yeah, Clayton, I'm sorry. What's up?

405
00:37:09.420 --> 00:37:17.379
Clayton Graves: I kind of forgot what I was. Gonna say, Back in the the demonstration.

406
00:37:17.840 --> 00:37:23.630
Clayton Graves: Yes, sir. One specification. Can you go down to the bottom?

407
00:37:24.420 --> 00:37:25.980
Anthony Taylor: Umhm? Right here

408
00:37:26.320 --> 00:37:35.469
Clayton Graves: up a little bit more. So I can see. Yeah, there we go. So index is in square brackets, and the add function parentheses.

409
00:37:35.990 --> 00:37:48.480
Clayton Graves:  I'm not. Is there a reason why they separated it like that? Or is there. I mean, there might be, but is no practical reason I could pick up why they did it.

410
00:37:49.250 --> 00:37:55.230
Anthony Taylor: I mean, technically, this is a tuple. and this is a list. But

411
00:37:55.930 --> 00:38:00.539
Anthony Taylor: II don't, I mean, and they're treated the same way other than you know the whole.

412
00:38:17.960 --> 00:38:19.449
Anthony Taylor: Well, that's interesting.

413
00:38:21.960 --> 00:38:23.330
Anthony Taylor: That's interesting.

414
00:38:26.340 --> 00:38:27.889
Anthony Taylor: So, Min Max.

415
00:38:31.010 --> 00:38:33.549
Anthony Taylor: that is kind of cool.

416
00:38:34.970 --> 00:38:37.749
Anthony Taylor: I'll look that up and see why it's different.

417
00:38:39.290 --> 00:38:40.400
Anthony Taylor: That's fun.

418
00:38:44.120 --> 00:38:47.040
Anthony Taylor: like I said, this isn't really something we use very often.

419
00:38:47.100 --> 00:38:51.589
Anthony Taylor: So I do like that. It put it looks like all it did was add that

420
00:38:52.730 --> 00:39:09.759
Dipinto, Matt: I think because it's multi index. It might be kinda negating. It's changed, but when we did it with the the student score examples in the last one you did like Min Max instead of vertically stacking your 2 rows. It was, I guess, stacking them as columns. So it's doing the horizontal stack

421
00:39:10.460 --> 00:39:12.250
Dipinto, Matt: work Cat and Justin.

422
00:39:12.660 --> 00:39:17.890
Anthony Taylor: I will check out the documentation on it and see what it says while you guys are enjoying yourselves and your

423
00:39:19.070 --> 00:39:22.439
Anthony Taylor: alright, so good question.

424
00:39:22.890 --> 00:39:25.400
Anthony Taylor: So share what? Yeah.

425
00:39:25.780 --> 00:39:30.119
Anthony Taylor:  Skip that whole part

426
00:39:31.340 --> 00:39:40.520
Anthony Taylor: you get to do it again, except for we can skip really fast.

427
00:39:40.840 --> 00:39:47.230
Anthony Taylor: Alright, make model some. We're going to do pivot tables. There's the 2 columns. See? Cause it says, total sum

428
00:39:47.530 --> 00:39:55.120
Anthony Taylor: vehicles. That's the data frame model and may thank. then we're gonna rename it and sort it. How pretty that is!

429
00:39:55.460 --> 00:39:58.050
Anthony Taylor: Here it is again, total sum

430
00:39:58.560 --> 00:40:03.469
Anthony Taylor: vehicles, data frame model, make year 3 indexes time.

431
00:40:03.680 --> 00:40:08.180
Anthony Taylor: and there you go, rename and sort super exciting

432
00:40:08.370 --> 00:40:09.940
Anthony Taylor: to this time.

433
00:40:11.020 --> 00:40:15.420
Anthony Taylor: and rename the soil. 3 again. rename and sort

434
00:40:15.980 --> 00:40:20.940
Anthony Taylor: pretty straightforward. Okay, Simon, you had a question before that exciting thing.

435
00:40:21.670 --> 00:40:27.229
Sonja Baro (she/hers): Yeah. And it was actually we didn't have the direct example in the

436
00:40:27.240 --> 00:40:37.620
Sonja Baro (she/hers): exercise. We were talking about it from the activity before we went to our own. It was Re, where the sort is inside of the pivot table.

437
00:40:39.170 --> 00:40:44.230
Sonja Baro (she/hers): How is it? What is sorting off of? So

438
00:40:44.250 --> 00:40:49.120
Sonja Baro (she/hers): specifically, this was the Ufo section, and it was.

439
00:40:49.270 --> 00:41:01.049
Sonja Baro (she/hers): you know, you had your index. You have 3 index. You had one value of shape, and then you had an add function of count and then sort by false. This guy right here.

440
00:41:01.140 --> 00:41:05.569
Sonja Baro (she/hers): Yeah. And when where we were having. The conversation was around

441
00:41:05.610 --> 00:41:19.789
Sonja Baro (she/hers): the sorting. We had the option. We can say, sort on values, or we were asking about what if it's in the pivot table. What is it sorting off of? And you're on the value of shape.

442
00:41:20.110 --> 00:41:30.820
Anthony Taylor: Well, in this case of the count. But yeah, it really be the it'd be the combination of these 2. And the false here doesn't mean don't sort. It means it's to send

443
00:41:30.870 --> 00:41:36.430
Anthony Taylor: right? Okay, we just wanted to clarify that cause we.

444
00:41:37.030 --> 00:41:38.809
Anthony Taylor: I like that awesome.

445
00:41:39.750 --> 00:41:41.090
Anthony Taylor: Alright.

446
00:41:41.830 --> 00:41:43.659
Sonja Baro (she/hers): I think Cindy has a question.

447
00:41:43.670 --> 00:41:45.339
Anthony Taylor: Yes, Cindy, go for it.

448
00:41:49.050 --> 00:41:50.419
Anthony Taylor: I can't hear you, Cindy.

449
00:41:50.850 --> 00:41:55.440
Sihong Zhou: Yeah, I don't know why my sort of value doesn't work.

450
00:41:56.460 --> 00:41:59.469
Sihong Zhou: Can I share my screen? Yeah.

451
00:41:59.680 --> 00:42:02.389
Sihong Zhou: okay, so like,

452
00:42:04.490 --> 00:42:07.710
Sihong Zhou: Can you see my screen? Cindy lets me lower her handbag

453
00:42:11.570 --> 00:42:17.359
Sihong Zhou: so I don't know why II think it's correct, Ray, cause I didn't do anything. I just copy it

454
00:42:18.390 --> 00:42:21.980
Anthony Taylor:  count to scroll up a little bit

455
00:42:22.930 --> 00:42:29.280
Sihong Zhou: maybe isn't because I put value. Count should be counter right.

456
00:42:29.410 --> 00:42:36.849
Derek Rikke: When you do the rename, you gotta assign that to a value, and you call that cause. You didn't save you change count to total.

457
00:42:37.120 --> 00:42:43.799
Derek Rikke: And then you're trying to.

458
00:42:44.210 --> 00:42:46.200
Anthony Taylor: Good. Catch Derek.

459
00:42:46.470 --> 00:42:48.049
Anthony Taylor: Nice work, man.

460
00:42:48.540 --> 00:42:49.740
thank you. Thank you.

461
00:42:50.400 --> 00:42:54.570
Anthony Taylor: No problem. Aye. it's springtime

462
00:42:54.700 --> 00:42:59.050
Anthony Taylor:  chefs. Come quarter after the hour.

463
00:43:00.080 --> 00:43:01.030
Anthony Taylor: Okay.

464
00:43:02.090 --> 00:43:03.890
Anthony Taylor: 15 after. See you? Then

465
00:43:07.390 --> 00:43:09.870
Anthony Taylor: let's get right back to it.

466
00:43:10.880 --> 00:43:12.359
Anthony Taylor: Alright. So

467
00:43:13.910 --> 00:43:19.519
Anthony Taylor: we've done some pivot. One column, 2 column. Multi column multi ag, all of this fun stuff.

468
00:43:20.160 --> 00:43:24.749
Anthony Taylor: So now let's what if we need to do a pivot?

469
00:43:25.120 --> 00:43:30.290
Anthony Taylor: And we want to do some custom function.

470
00:43:31.310 --> 00:43:34.140
Anthony Taylor: That's what we're gonna cover next.

471
00:43:35.850 --> 00:43:40.619
Anthony Taylor: good news is not really that tough to figure out.

472
00:43:42.060 --> 00:43:50.169
Anthony Taylor:  probably the hardest part about it is is just coming up with a function. For that's interesting.

473
00:43:50.990 --> 00:43:52.969
Okay? So we got Ufos again.

474
00:43:54.060 --> 00:43:56.219
Anthony Taylor: And here's our listed column.

475
00:43:56.270 --> 00:44:10.329
Anthony Taylor: And here's a function. So we already know how to do an average function. We know we have a function called mean. This is kind of like the example we were doing the other day where I was like, well, here's a very simple function that just calls another function.

476
00:44:10.720 --> 00:44:13.410
Anthony Taylor: But there you go. Okay.

477
00:44:13.960 --> 00:44:26.000
Anthony Taylor: So to call our view wicked cool function. We're going to pivot table pass in the data frame, pass in our 2 index columns that are one or 3 or 5. Whatever

478
00:44:26.230 --> 00:44:34.780
Anthony Taylor: the column we want to use, and there it is. Add function. the name of the function we just created. That's it.

479
00:44:38.280 --> 00:44:44.120
Anthony Taylor: And since this was an average, we know it could be afloat. So we went ahead and rounded it to keep it clean. And there you go.

480
00:44:45.750 --> 00:44:48.860
Anthony Taylor: That is it? That's this entire lesson.

481
00:44:50.250 --> 00:44:51.500
Anthony Taylor: Okay. Now.

482
00:44:51.730 --> 00:45:06.339
Anthony Taylor: we could try to come up with a more interesting function. They don't here, you see, they're just renaming so doing like they were before. Here they got custom count, which is just count custom sum, which is just sum

483
00:45:06.630 --> 00:45:11.839
Anthony Taylor:  You can stack all of these guys

484
00:45:12.330 --> 00:45:16.149
Anthony Taylor: like we did with, you know, multi aggregate functions.

485
00:45:16.280 --> 00:45:25.109
Anthony Taylor: So you can have. You could call custom, sum, custom, average custom, count and output them just like we were with the regular aggregators.

486
00:45:26.340 --> 00:45:27.270
Anthony Taylor: Okay?

487
00:45:28.050 --> 00:45:41.550
Anthony Taylor:  And then here we can get the column names. They're going to rename the columns. Average seconds, number sightings, total seconds. Probably. Good. Again, a lot of this kind of stuff, guys. And and I can't emphasize this enough.

488
00:45:41.640 --> 00:45:46.009
Anthony Taylor: It depends on what you're doing, but it is very rare

489
00:45:46.310 --> 00:45:47.200
Anthony Taylor: like

490
00:45:49.360 --> 00:46:00.370
Anthony Taylor: II can't even think of when I would have seen this. Maybe Kevin and James, you've seen this where you're gonna get you worked up about like your column headers and stuff that you know, making them

491
00:46:00.480 --> 00:46:06.420
Anthony Taylor: presentation ready? Okay? Because you're gonna most of the time send this to a reporting tool

492
00:46:07.940 --> 00:46:17.199
Anthony Taylor: and the reporting tool. This is all going to be like normal stuff to do. Okay. But it's still good to know how to do it, because you never know.

493
00:46:18.250 --> 00:46:19.130
Anthony Taylor: Okay.

494
00:46:19.490 --> 00:46:28.330
Anthony Taylor: here's a little bit more complex function. And this one we're gonna do. If the count is greater than 20, return the count.

495
00:46:29.300 --> 00:46:34.779
Anthony Taylor: Now that'll be interesting, because anything that is not greater than 20 is gonna return.

496
00:46:34.840 --> 00:46:36.180
Anthony Taylor: Well, nothing

497
00:46:38.480 --> 00:46:41.850
Anthony Taylor: alright. So maybe we don't want anything that has nothing.

498
00:46:42.680 --> 00:46:46.620
Anthony Taylor: Okay. So we can just do a drop in a

499
00:46:47.390 --> 00:46:49.049
Anthony Taylor: that'll get rid of those nuts.

500
00:46:51.510 --> 00:46:58.400
Anthony Taylor: Alright. Here, we're gonna do it again. But this time we're gonna run our custom count with 3

501
00:46:58.720 --> 00:47:03.520
Anthony Taylor: indexes. We're gonna drop an a and then take a look at it all in one pass

502
00:47:04.800 --> 00:47:05.870
Anthony Taylor: pretty cool.

503
00:47:07.100 --> 00:47:11.109
Anthony Taylor: rename the columns to keep it interesting. And there you go.

504
00:47:12.070 --> 00:47:15.860
Anthony Taylor: That's it. So the create a function

505
00:47:15.980 --> 00:47:27.619
Anthony Taylor: any function like I said right now, these aren't great examples, but they are examples. hey? If your function was more complex, that would have been fine, too, and you pass it in at the add function

506
00:47:28.120 --> 00:47:30.370
Anthony Taylor: portion of your pivot.

507
00:47:31.370 --> 00:47:34.280
Anthony Taylor: That's it, guys, that's the whole thing.

508
00:47:35.290 --> 00:47:36.349
Anthony Taylor: Any questions.

509
00:47:41.220 --> 00:47:46.269
Anthony Taylor: All righty. So now we're gonna start putting a little bit more together.

510
00:47:46.960 --> 00:47:56.440
Anthony Taylor: So you're going to read in delayed flights. You've used this one before, create a custom function that calculates the average. Well, just saw that using that one

511
00:47:56.690 --> 00:48:05.410
Anthony Taylor: create a pivot table that shows the largest average arrival delay for each carrier by day of month. So carrier day of month and day of week?

512
00:48:06.710 --> 00:48:08.609
Anthony Taylor: And then answer these questions.

513
00:48:08.690 --> 00:48:18.410
Anthony Taylor: using the average custom function that you created show the average delayed rivals and departures for each carrier day and month, day a week. So now we're talking delays.

514
00:48:19.050 --> 00:48:22.539
Anthony Taylor: Okay? And departure delays, arrival, delays, departure, delays

515
00:48:22.640 --> 00:48:24.699
Anthony Taylor: again. Answer the question.

516
00:48:25.100 --> 00:48:36.700
Anthony Taylor: Create a custom function that will calculate the total data from a data friend column some much. And then do this last little section. Okay.

517
00:48:38.630 --> 00:48:40.930
Anthony Taylor: that one is really something.

518
00:48:41.940 --> 00:48:43.470
Anthony Taylor: You know what I mean.

519
00:48:49.400 --> 00:48:52.129
Anthony Taylor: even a smooth oh, thank you, Rodney.

520
00:48:52.170 --> 00:48:56.830
Anthony Taylor: stay in, Jennifer. Thank you. Now I got a smirk all right. Here we go.

521
00:49:15.220 --> 00:49:16.390
Anthony Taylor: So how'd it go

522
00:49:17.670 --> 00:49:23.240
Anthony Taylor: is today easier? Or you guys just getting it today? I don't know what's going

523
00:49:25.430 --> 00:49:30.959
Mason, Natalie: getting it. And this one has seemed fairly repetitive.

524
00:49:31.530 --> 00:50:01.259
Sonja Baro (she/hers): Yeah, Charlie Brown. Special season.

525
00:50:01.560 --> 00:50:02.850
Sonja Baro (she/hers): Right? Okay.

526
00:50:03.210 --> 00:50:06.559
Kanouff, Christine: I just appreciate loud hissing noise.

527
00:50:07.050 --> 00:50:08.980
Kanouff, Christine: About 8, 45.

528
00:50:10.380 --> 00:50:18.470
Meredith McCanse (she/her): I appreciate the repetition. It just having to type it over and over again really helps on it.

529
00:50:18.920 --> 00:50:26.330
Meredith McCanse (she/her): and so I appreciate. I appreciate. I feel like you are maybe about to say, Anthony. You felt like it was a well planned that put up, put together a lesson.

530
00:50:26.500 --> 00:50:39.739
Anthony Taylor: It's like because they're doing what I prefer. And this is way we do the machine learning stuff to. It's like one little thing. and then one little. It's like. we're not like stacking 6, 7 things per lecture. It's just a couple.

531
00:50:39.930 --> 00:50:42.750
Anthony Taylor: one or 2 things and then go do something. Come back.

532
00:50:43.360 --> 00:50:46.060
Anthony Taylor: But part of that's because

533
00:50:46.590 --> 00:50:49.680
Anthony Taylor: you guys have had all of that stack stuff now.

534
00:50:49.890 --> 00:50:56.059
Anthony Taylor: So we're at the point now, where we're just like getting very specialized on certain areas.

535
00:50:56.320 --> 00:51:01.870
Anthony Taylor: And obviously, you guys, your specialties will not be this, though you should know data very well.

536
00:51:03.170 --> 00:51:07.470
Anthony Taylor: You will be more focused on the machine learning stuff. But anyway, we'll get there

537
00:51:07.550 --> 00:51:13.820
Anthony Taylor: soon enough. So you imported your data. You looked at your columns.

538
00:51:14.880 --> 00:51:19.169
Anthony Taylor: created this little average function and then called it.

539
00:51:22.040 --> 00:51:25.560
Anthony Taylor: and then you cleaned it up and sorted it, and it looks like that

540
00:51:26.550 --> 00:51:28.829
Anthony Taylor: anybody have any trouble with any of this.

541
00:51:30.740 --> 00:51:36.799
Anthony Taylor: I mean, it's not a ton to explain. It was a 3 column index. The value was delays.

542
00:51:36.890 --> 00:51:39.709
Anthony Taylor: and you just ran your custom average function.

543
00:51:39.880 --> 00:51:43.660
Anthony Taylor: Then you renamed it to make it a little prettier, and then sorted it

544
00:51:46.080 --> 00:51:57.370
Anthony Taylor: again. That's a lot of visual stuff, for within python. Here's the same thing. Except for this time. We're doing arrival, delay, and departure delay with an average

545
00:51:57.610 --> 00:52:00.210
Anthony Taylor: renaming and sorting.

546
00:52:02.140 --> 00:52:03.540
Anthony Taylor: There we go.

547
00:52:05.970 --> 00:52:08.499
Anthony Taylor: This sorted the other way.

548
00:52:13.140 --> 00:52:16.140
Anthony Taylor: That's weird. A minus 10 arrival delay.

549
00:52:17.390 --> 00:52:20.770
Anthony Taylor: We just left early dude. would you?

550
00:52:22.510 --> 00:52:25.470
Anthony Taylor: Then we have a new one some.

551
00:52:26.580 --> 00:52:31.400
Anthony Taylor: So we're gonna do custom sum and custom average on diverted.

552
00:52:32.910 --> 00:52:34.929
Anthony Taylor: and do all the renaming stuff

553
00:52:36.060 --> 00:52:36.950
Anthony Taylor: pretty cool.

554
00:52:38.980 --> 00:52:40.499
Anthony Taylor: Stop me if you have questions.

555
00:52:41.500 --> 00:52:43.809
Anthony Taylor: Well, I guess you don't cause we're at the end.

556
00:52:45.810 --> 00:52:58.469
Anthony Taylor: Good. Well, I'm glad you guys follow along with that. So I'm gonna jump back to slideshow for this next section. Next section is sorry I did a nice special. We don't have to quickly run through it again.

557
00:52:59.670 --> 00:53:00.610
Anthony Taylor: So

558
00:53:02.430 --> 00:53:05.559
Anthony Taylor: this next section is a little less

559
00:53:07.770 --> 00:53:08.970
Anthony Taylor: easy to follow.

560
00:53:09.980 --> 00:53:11.969
Anthony Taylor: But we're gonna do our best.

561
00:53:12.160 --> 00:53:22.720
Anthony Taylor: We're gonna learn 2 more functions. One's called resample. and one is called Melt. So if you have data that

562
00:53:22.910 --> 00:53:25.069
Anthony Taylor: we have indexed with

563
00:53:25.250 --> 00:53:26.450
Anthony Taylor: a date.

564
00:53:27.450 --> 00:53:30.109
Anthony Taylor: we can execute resample

565
00:53:31.300 --> 00:53:33.080
Anthony Taylor: and passing in

566
00:53:33.490 --> 00:53:38.800
Anthony Taylor: a value that represents like a type of day.

567
00:53:39.010 --> 00:53:41.950
Anthony Taylor: a type of measurement of of time.

568
00:53:42.140 --> 00:53:45.169
Anthony Taylor: So you could have day and week. You could have month.

569
00:53:46.380 --> 00:53:47.360
Anthony Taylor: Okay?

570
00:53:47.780 --> 00:53:51.230
Anthony Taylor: And then it will aggregate

571
00:53:51.660 --> 00:53:53.259
Anthony Taylor: based on that

572
00:53:54.310 --> 00:54:03.119
Anthony Taylor: resample. So in this case, here we have some data, and we're like, Hey, we want you to resample this data from this data frame

573
00:54:03.410 --> 00:54:04.700
Anthony Taylor: by week

574
00:54:05.660 --> 00:54:12.160
Anthony Taylor: and give us a sum. And so when you look at the data 1, 1, 8, 1 15, 1.2. So on. So and so

575
00:54:12.440 --> 00:54:17.160
Anthony Taylor: each one is a week apart. The original data was every okay.

576
00:54:18.220 --> 00:54:20.010
Anthony Taylor: very, very cool function

577
00:54:21.000 --> 00:54:27.649
Anthony Taylor: if we went due month. Cap. Assent, capital, M, and we get 1, 2, and 3. So January, February March.

578
00:54:28.850 --> 00:54:31.140
Anthony Taylor: Pretty pretty easy, right?

579
00:54:31.920 --> 00:54:44.420
Anthony Taylor: And that's it on resamp. We're going to go see it in just a second. But that's really it. You have data. If it has a date column and you index on it, you can use resample to break it into

580
00:54:46.510 --> 00:54:48.990
Anthony Taylor: units of time. Okay.

581
00:54:49.540 --> 00:54:56.820
Meredith McCanse (she/her): do you have to put it into time series format? Does the data type have to be like date time format.

582
00:54:56.920 --> 00:55:05.830
Anthony Taylor: First, almost certain. Oh, but yeah, the good news is with pandas. In particular. It pretty just says to be in that form.

583
00:55:07.340 --> 00:55:09.470
Anthony Taylor: Okay, that's the main thing.

584
00:55:10.290 --> 00:55:18.040
Anthony Taylor: Alright, so melts. So I want you to just forget. Resample for a second till we get to the demo melt.

585
00:55:20.610 --> 00:55:25.809
Anthony Taylor: Imagine you have a pivot table and you wanted it to be vertical instead of horizontal.

586
00:55:28.340 --> 00:55:29.160
Anthony Taylor: Melt.

587
00:55:30.700 --> 00:55:33.799
Anthony Taylor: Okay, now, that sounds a little weird. But let me show you what it looks like.

588
00:55:34.130 --> 00:55:35.799
Anthony Taylor: So here's our pivot table.

589
00:55:37.230 --> 00:55:41.320
Anthony Taylor: Okay, we execute a melt

590
00:55:41.450 --> 00:55:46.180
Anthony Taylor: on. Well, first, we want to get rid of this index. Put it as a column. So we'll do that first.

591
00:55:46.370 --> 00:55:51.180
Anthony Taylor: so that it looks like this. Okay? And we have this a normal index.

592
00:55:51.780 --> 00:56:03.220
Anthony Taylor: Now we're gonna run milk and what it's gonna do. Subject biology. subject. composition.

593
00:56:03.690 --> 00:56:05.930
Anthony Taylor: subject math

594
00:56:06.040 --> 00:56:10.579
Anthony Taylor: guys see what's going on. So the column header is the variable

595
00:56:11.290 --> 00:56:18.279
Anthony Taylor: and the value is the actual value under that column, header. And note. Now, we just have 2

596
00:56:18.420 --> 00:56:19.450
Anthony Taylor: columns.

597
00:56:19.580 --> 00:56:21.729
Anthony Taylor: So, Elsina.

598
00:56:21.780 --> 00:56:25.430
Anthony Taylor: 85, I'll see the 74. I'll see the 94, I'll see the 73.

599
00:56:26.730 --> 00:56:28.749
Anthony Taylor: Okay, and that's what you see.

600
00:56:30.190 --> 00:56:32.720
Anthony Taylor: So it's called Melt.

601
00:56:34.530 --> 00:56:40.580
Anthony Taylor: Okay. Now. somebody has a question, I'm sure. Go ahead. I won't teach you.

602
00:56:43.960 --> 00:56:48.450
Mason, Natalie: So is this only working with month, day, and year.

603
00:56:49.730 --> 00:56:51.420
Anthony Taylor: and this one are resa

604
00:56:51.640 --> 00:56:53.459
Mason, Natalie: just in general

605
00:56:53.830 --> 00:56:59.260
Anthony Taylor: resample. There might be other ones. We can look it up. See what other variables. But right now

606
00:56:59.370 --> 00:57:01.160
Anthony Taylor: we're looking at month week.

607
00:57:02.010 --> 00:57:07.960
Anthony Taylor: Yeah. Oh, you mean here, yeah, I don't know. At this time. I'm pretty sure it doesn't, but we can look.

608
00:57:08.250 --> 00:57:14.569
Anthony Taylor: We'll look. We can go, you know. We'll do that. But I'm really looking for some questions about

609
00:57:14.760 --> 00:57:15.700
Anthony Taylor: melt.

610
00:57:16.320 --> 00:57:23.550
Dipinto, Matt: Seems like there should be a pretty obvious what? Go ahead? Why, there we go. I got 2 wise.

611
00:57:23.630 --> 00:57:29.730
Dipinto, Matt: it sees. See? It appears nonsensical.

612
00:57:30.830 --> 00:57:33.830
Sonja Baro (she/hers): I have a less existential question.

613
00:57:34.590 --> 00:57:43.870
Sonja Baro (she/hers): It was just, could you restate what it was doing? It was taking you, said horizontal, and turning it, or vertical into horizontal.

614
00:57:44.090 --> 00:57:44.880
Sonja Baro (she/hers): So

615
00:57:45.410 --> 00:57:52.739
Anthony Taylor: so it would. Let's look at the example again and again. We can look at this in code, too. So we have this. This is what we're starting with.

616
00:57:52.780 --> 00:57:54.739
Anthony Taylor: You execute melt

617
00:57:55.600 --> 00:58:02.809
Anthony Taylor: well, we re indexed it first, but that that's to. So we just all we do is we took the data frame. It did dot, melt.

618
00:58:03.450 --> 00:58:06.980
Anthony Taylor: and all it does is take the column header

619
00:58:07.170 --> 00:58:08.760
Anthony Taylor: creates a row

620
00:58:08.990 --> 00:58:13.980
Anthony Taylor: for each value under that column header with the

621
00:58:14.820 --> 00:58:16.180
Anthony Taylor: what was it variable?

622
00:58:16.360 --> 00:58:21.340
Anthony Taylor: The variable column being the column header. and the value being

623
00:58:21.380 --> 00:58:24.380
Anthony Taylor: the actual value under that header.

624
00:58:25.450 --> 00:58:28.760
Anthony Taylor: See so like subject, biology, composition, mass, speech.

625
00:58:30.100 --> 00:58:33.870
Anthony Taylor: subject, biology, subject, composition, subject. Math, subject speech.

626
00:58:36.080 --> 00:58:44.640
Sonja Baro (she/hers): Okay? And now the y, yeah. Okay.

627
00:58:45.060 --> 00:58:54.910
michael mcpherson: So you continue down that it goes. Subject subject subject, subject. Alicia, subject 85 is biology. Each column.

628
00:58:54.980 --> 00:58:56.770
Anthony Taylor: Yeah, becomes a row.

629
00:58:58.150 --> 00:59:03.910
Anthony Taylor: Every column will become a row with all of its Val, one row for each each valve.

630
00:59:05.360 --> 00:59:08.399
Anthony Taylor: Okay, so let me give you an example of where you might use.

631
00:59:09.630 --> 00:59:20.450
Anthony Taylor: We don't have any data to show this on. But just bear with. Let's say you have a table where the data is sorted by month. not sorted, but the columns are each month.

632
00:59:21.220 --> 00:59:28.210
Anthony Taylor: January, February, March, April, May, June alright, and underneath it all of these values.

633
00:59:29.640 --> 00:59:37.489
Anthony Taylor: okay, you can work with that. But since they're all columns aggregating these would be complicated.

634
00:59:37.980 --> 00:59:44.299
Anthony Taylor: You would literally have to call each column separately. process it, and then aggregate.

635
00:59:45.280 --> 00:59:57.470
Anthony Taylor: If you melt it, you end up with January, the value, January, the value, January about. Understand? Now it becomes very simple

636
00:59:57.760 --> 01:00:03.479
Anthony Taylor: to get individual, you know, chunks of the data or aggregate all of the data

637
01:00:03.490 --> 01:00:04.890
Anthony Taylor: in one pass.

638
01:00:06.190 --> 01:00:07.030
That's a

639
01:00:07.330 --> 01:00:12.869
Anthony Taylor: not. That's a realistic example. Again, don't see this a lot. But

640
01:00:12.970 --> 01:00:25.829
Anthony Taylor: I have seen it used a couple of times. This is not one of those ones. It's like, you never see the snow seen it. It's not common, but it it does appear. Everyone's smart.

641
01:00:26.600 --> 01:00:32.630
Anthony Taylor: and it's usually just like what I just said the way the data came in. It just would be easier if I could

642
01:00:33.050 --> 01:00:34.649
Anthony Taylor: get it all in one call

643
01:00:36.100 --> 01:00:37.529
Anthony Taylor: and then work with it that way.

644
01:00:38.480 --> 01:00:40.929
Anthony Taylor: Okay, where it really helps

645
01:00:42.920 --> 01:00:44.190
Anthony Taylor: visualizations.

646
01:00:46.260 --> 01:00:52.309
Anthony Taylor: Okay? Because if your data is spread out like this, and you try to do a line chart. You're gonna have a line for every month.

647
01:00:53.460 --> 01:00:59.390
Anthony Taylor: Okay? But if you wanted to do something a little differently. You could put it all in one and have one line

648
01:00:59.490 --> 01:01:01.580
Anthony Taylor: that goes over a period of time.

649
01:01:03.080 --> 01:01:09.020
Anthony Taylor: Alright. So there's a lot of options.  that you know

650
01:01:09.540 --> 01:01:12.900
Anthony Taylor: it sounds. And then oh, and then what they do with this melt

651
01:01:13.180 --> 01:01:15.320
Anthony Taylor: they actually

652
01:01:15.460 --> 01:01:17.319
Anthony Taylor: they they run the melt.

653
01:01:17.640 --> 01:01:19.559
Anthony Taylor: Okay to get

654
01:01:19.570 --> 01:01:23.920
Anthony Taylor: get broken down. And then they do a group I and did a mean

655
01:01:24.170 --> 01:01:26.940
Anthony Taylor: of just the subject for that one.

656
01:01:27.550 --> 01:01:31.330
Anthony Taylor: just an example of how you could use it. Okay?

657
01:01:31.690 --> 01:01:34.370
Anthony Taylor: Alright. So let's go look at the code.

658
01:01:39.810 --> 01:01:45.219
Anthony Taylor: So here we sit canvas. We got random because we're gonna do a random somewhere.

659
01:01:45.740 --> 01:01:57.080
Anthony Taylor: We're going to grab a date range from 1 1, 2390 day periods frequency day. That's pretty cool random integers. So we're just gonna make data gonna manufacture some data.

660
01:01:58.240 --> 01:01:59.270
Anthony Taylor: Okay.

661
01:02:00.100 --> 01:02:06.000
Anthony Taylor: now, we're going to apply the resample. So first, we're going to set the index to this date column.

662
01:02:07.470 --> 01:02:13.380
Anthony Taylor: Then we're going to say resample by week, so give me the sum of visits by week.

663
01:02:16.950 --> 01:02:19.999
Anthony Taylor: Give me the count of visits by week.

664
01:02:23.870 --> 01:02:25.969
The average

665
01:02:30.130 --> 01:02:33.350
Anthony Taylor: oh, just rounded. It's the same as before, but just rounded.

666
01:02:34.230 --> 01:02:36.470
Anthony Taylor: Okay? And then some by month.

667
01:02:38.110 --> 01:02:39.070
Anthony Taylor: we go

668
01:02:40.250 --> 01:02:44.820
Anthony Taylor: questions on resample. Actually, I had the the documentation up staying.

669
01:02:47.040 --> 01:02:50.719
I wanted to see if there was something other than month weekend day.

670
01:02:54.940 --> 01:02:56.770
Anthony Taylor: usually.

671
01:03:02.470 --> 01:03:06.020
Anthony Taylor: But yeah, there's a lot that there's apparently you can do time.

672
01:03:08.930 --> 01:03:09.780
Anthony Taylor: Yeah.

673
01:03:12.170 --> 01:03:19.779
Anthony Taylor: you certainly can. So yeah, you can do anything with this. You can do a lot with it a lot with it. Not just dates.

674
01:03:23.830 --> 01:03:27.489
Anthony Taylor: Yeah, there's a lot there. All the functions you can pass in.

675
01:03:29.140 --> 01:03:35.609
Anthony Taylor: So yeah, so there's a lot of fun stuff you could do with that. If you want to look at more of that, simply go check out the docs.

676
01:03:36.790 --> 01:03:40.659
Anthony Taylor: Okay, and then melts. So here we have our data.

677
01:03:41.800 --> 01:03:44.409
Anthony Taylor: Okay, first, we're going to pivot it

678
01:03:45.530 --> 01:03:49.729
Anthony Taylor: now. And this is how I've seen this used. Actually, you see how we have this?

679
01:03:50.350 --> 01:03:51.890
Anthony Taylor: We could

680
01:03:52.030 --> 01:03:54.690
Anthony Taylor: with some pretty crazy stuff.

681
01:03:54.810 --> 01:04:04.479
Anthony Taylor: make what we're gonna make with the milk using this. But it would take multiple steps the way we're into it right now only takes 2.

682
01:04:05.980 --> 01:04:07.890
Anthony Taylor: Okay, we pivoted.

683
01:04:07.940 --> 01:04:09.240
Anthony Taylor: And then

684
01:04:09.320 --> 01:04:13.209
Anthony Taylor: well, technically resetting. The index is a step. But then we melt it.

685
01:04:15.340 --> 01:04:17.130
Anthony Taylor: So we took this

686
01:04:17.440 --> 01:04:21.080
Anthony Taylor: and made it this in just a couple of quick steps.

687
01:04:22.810 --> 01:04:24.569
Anthony Taylor: which is very, very cool.

688
01:04:25.750 --> 01:04:31.489
Anthony Taylor:  Oh, then we're gonna reindex and melt. Yeah. Oh, wait. Now, what do we do?

689
01:04:31.550 --> 01:04:34.279
Anthony Taylor: We're doing by subject.

690
01:04:35.780 --> 01:04:40.530
Anthony Taylor: So now we have subject in there as well. That's kind of cool.

691
01:04:42.270 --> 01:04:47.109
Anthony Taylor: Exam scores subjects, student name and the value.

692
01:04:49.320 --> 01:04:51.989
Anthony Taylor: Okay? And all of this is coming from that pit.

693
01:04:54.630 --> 01:04:59.779
Anthony Taylor: And then last, we're gonna do the group buy and hit the average by subject area

694
01:05:00.670 --> 01:05:05.109
Anthony Taylor: as we're grouping by subject using exam score average round

695
01:05:10.560 --> 01:05:11.680
Anthony Taylor: questions.

696
01:05:17.170 --> 01:05:19.130
Anthony Taylor: Let's look at your last activity.

697
01:05:20.530 --> 01:05:32.249
Anthony Taylor: Use the provided code to read in. You got a full Ufo pivot resample and 2 weekly bins. Get the average duration in seconds for each week.

698
01:05:32.780 --> 01:05:34.049
Anthony Taylor: then sort it.

699
01:05:34.460 --> 01:05:45.890
Anthony Taylor: resample again. Monthly bins get the arbitration in seconds, resort it.  get a, it says use provided code. So hopefully, you have that

700
01:05:45.990 --> 01:05:51.350
Anthony Taylor:  data frame into weekly bins get the total. So we're doing all this resampling.

701
01:05:52.360 --> 01:05:56.609
Anthony Taylor: Okay? Then you're gonna do a melt. You're gonna bring in book sales.

702
01:05:57.480 --> 01:05:59.750
Convert book sales reindex.

703
01:06:00.250 --> 01:06:06.539
Anthony Taylor: and then just do a quick melt oop. If you want, you can do this group by at the end. If you make it that fun.

704
01:06:08.420 --> 01:06:11.260
Anthony Taylor: Hi, guys. Let me see how long I'm supposed to.

705
01:06:12.440 --> 01:06:13.909
Anthony Taylor: I'm guessing 20

706
01:06:15.700 --> 01:06:16.900
Anthony Taylor: but

707
01:06:19.630 --> 01:06:22.879
Anthony Taylor: 15. I don't know. You guys want 20 for this one.

708
01:06:23.490 --> 01:06:26.069
Anthony Taylor: We're doing fine. I'm gonna give you a 20.

709
01:06:26.720 --> 01:06:31.280
Anthony Taylor: Let's get this back on sharing.

710
01:06:32.480 --> 01:06:38.229
Anthony Taylor:  so yeah. So yeah, I haven't done that yet. Where was it?

711
01:06:39.380 --> 01:06:43.459
Anthony Taylor: no. Which one was it in people

712
01:06:43.470 --> 01:06:44.850
Vasquez, Gabriel: to E one?

713
01:06:44.930 --> 01:06:50.170
Sonja Baro (she/hers): Go on and go in resources? Here you

714
01:06:52.420 --> 01:06:53.130
go

715
01:06:54.990 --> 01:06:57.039
Anthony Taylor: alright. So that'll work when we get there.

716
01:06:57.310 --> 01:07:00.000
Anthony Taylor: Okay? Actually, oh.

717
01:07:00.210 --> 01:07:00.940
Anthony Taylor: this.

718
01:07:02.690 --> 01:07:06.120
Anthony Taylor: Okay? So

719
01:07:07.790 --> 01:07:12.550
Anthony Taylor: overall that didn't seem like it was too bad. It was a lot of kind of weird concepts. But

720
01:07:12.760 --> 01:07:16.439
Anthony Taylor:  overall, it was perfectly easy.

721
01:07:17.660 --> 01:07:19.689
michael mcpherson: Hey? There's that error that we

722
01:07:19.840 --> 01:07:24.460
Anthony Taylor: we got stuck on. It's not an error. If the warning don't worry about warnings.

723
01:07:26.110 --> 01:07:30.469
Anthony Taylor: I think I've told you guys that before I'll tell you one more time. Don't worry about warnings.

724
01:07:31.600 --> 01:07:39.210
Anthony Taylor: Warnings are not important unless you're like writing. An application or something. Alright. So we have our data.

725
01:07:39.400 --> 01:07:47.189
Anthony Taylor: we kind of see what it's about. It's cool. So we're going to do a pivot on daytime

726
01:07:47.380 --> 01:07:58.010
Anthony Taylor: duration seconds. We're gonna sum it up. Why did we do that? Well, because we wanted date time in our index. And this was a really convenient way to do it. Okay.

727
01:07:58.260 --> 01:08:02.840
Anthony Taylor: so now that we have that we can resample on week, get the mean round one

728
01:08:03.670 --> 01:08:10.660
Anthony Taylor: and then we're gonna sort the values. That's pretty fun by week.

729
01:08:12.350 --> 01:08:19.990
Anthony Taylor: Man, September fifteenth, 1991, I'm thinking something must have been there. What do you guys think that's a lot of views?

730
01:08:21.670 --> 01:08:26.869
Anthony Taylor: Okay, well, here we could do it by month. Only thing had changed with that. M.

731
01:08:28.970 --> 01:08:29.979
Anthony Taylor: Okay.

732
01:08:31.080 --> 01:08:40.920
Anthony Taylor:  So here we're going to create a pivot table with date time is the index. But this time we're going to look at the count. We're using shape to look at the count.

733
01:08:41.370 --> 01:08:42.609
Anthony Taylor: whatever

734
01:08:42.990 --> 01:08:46.499
Anthony Taylor: it's basically, we could have used almost any field

735
01:08:46.779 --> 01:08:58.880
Anthony Taylor:  But yeah. so once we have that we can sum the count based on weeks. we can do it by months

736
01:09:00.270 --> 01:09:09.170
Anthony Taylor: any questions on the day time step was that pretty straightforward once you got? Why, we were pivoting to get the index kind of makes sense.

737
01:09:09.930 --> 01:09:10.790
Anthony Taylor: Alright.

738
01:09:11.399 --> 01:09:16.899
Anthony Taylor: Okay, Milt. So once you brought the file down. You got something like this.

739
01:09:17.569 --> 01:09:27.350
Anthony Taylor:  we're gonna re-enter. We're just gonna melt it just like it is okay. And what we get is basically a date.

740
01:09:27.479 --> 01:09:28.920
Anthony Taylor: And the value.

741
01:09:29.240 --> 01:09:34.640
Anthony Taylor: or this, the only problem with this is, it's kind of lame, is like date and value for what

742
01:09:36.569 --> 01:09:40.260
Anthony Taylor: I we don't know which book it's assigned to. But yeah.

743
01:09:40.490 --> 01:09:46.429
Anthony Taylor: that's the issue with milk. However, if we read the index it this way.

744
01:09:46.939 --> 01:09:51.090
Anthony Taylor:  we get something that really looks a whole lot

745
01:09:51.529 --> 01:09:54.510
Anthony Taylor: like the original data frame sets.

746
01:09:54.860 --> 01:09:58.510
Anthony Taylor: it's broken down by individual date.

747
01:09:58.830 --> 01:10:00.010
Anthony Taylor: So this is helpful.

748
01:10:01.560 --> 01:10:02.500
Anthony Taylor: Okay.

749
01:10:03.680 --> 01:10:05.820
Anthony Taylor: here we're gonna do it again.

750
01:10:06.220 --> 01:10:11.289
Meredith McCanse (she/her): But this time I have a question. I have a question on this one. Anthony.

751
01:10:11.660 --> 01:10:19.390
Meredith McCanse (she/her): Yeah, what does it mean when it says, convert the data frame like, what's what is converting. What does it asking you to do?

752
01:10:19.710 --> 01:10:24.679
Anthony Taylor: It says it means melted because we're converting it from this

753
01:10:25.720 --> 01:10:27.150
Anthony Taylor: to basically this

754
01:10:27.810 --> 01:10:33.769
Anthony Taylor: right? It's it's it's not even a reshape, a reshape. You seen us say, reshape with pivot?

755
01:10:34.030 --> 01:10:42.820
Anthony Taylor:  A reshape is changing the the number of indexes and call our rows and columns. That's reshaping it.

756
01:10:43.290 --> 01:10:47.119
Anthony Taylor: Okay, in this case, we're not even doing that. We're like, completely reforming.

757
01:10:47.730 --> 01:10:50.770
Anthony Taylor: So that's the convert. That's what it means by that.

758
01:10:51.370 --> 01:10:54.179
Anthony Taylor: Yeah, it's a good question. I like that question.

759
01:10:54.490 --> 01:11:03.229
Anthony Taylor: okay, so where do we leave off? And the last one? So here we're just gonna group by data and sum up all that good stuff in there by date and get it grouped or summed by date.

760
01:11:03.590 --> 01:11:11.490
Anthony Taylor: That's it. So, guys, I gotta tell you, I went through the homework while you guys were in there. Everything we have talked about is covered

761
01:11:12.230 --> 01:11:17.369
Anthony Taylor: in that homework. Okay, you just the the I. The best way to do it

762
01:11:17.650 --> 01:11:22.679
Anthony Taylor: would be read the question, go find the activity that you did it in, or we did it in.

763
01:11:23.160 --> 01:11:25.009
Anthony Taylor: and then do it.

764
01:11:25.170 --> 01:11:30.789
Anthony Taylor: then go back and just do it. Okay, it doesn't. There's like nothing extra in there that I saw.

765
01:11:32.320 --> 01:11:35.520
Anthony Taylor: Okay, anybody who's almost done with a degree disagree.

766
01:11:36.110 --> 01:11:39.370
Anthony Taylor: Yeah. So it shouldn't be too bad.

767
01:11:40.710 --> 01:11:43.109
Anthony Taylor: Hi! Well, guys, that's all I got.

768
01:11:44.990 --> 01:11:47.259
Anthony Taylor: So have a wonderful day.

769
01:11:47.350 --> 01:11:51.819
Clayton Graves: I'm still stuck. I'm still stuck on the having 2

770
01:11:52.120 --> 01:11:56.120
Clayton Graves: total sales instead of just one.

771
01:11:56.720 --> 01:11:58.170
Anthony Taylor: Where do you see that?

772
01:11:58.440 --> 01:12:00.520
Clayton Graves: Well, that's not here, that's in the homework.

773
01:12:01.180 --> 01:12:14.290
Anthony Taylor: Oh, okay, I'll let you handle that. But that's a great, that is a great homework help. And again. guys, last time or one more time you have tutoring, you have asp.

774
01:12:14.910 --> 01:12:22.490
Anthony Taylor: you have the assistant. and you have ta time, and I've only seen one slot out of

775
01:12:25.060 --> 01:12:27.610
Anthony Taylor: Mike 12

776
01:12:28.000 --> 01:12:30.719
Anthony Taylor: booked in the last 2 weeks.

777
01:12:31.100 --> 01:12:33.879
Anthony Taylor: So there's plenty of ta tech

778
01:12:34.070 --> 01:12:37.600
Anthony Taylor: guarantee. You these guys know how to do this stuff backwards and forwards.

779
01:12:38.060 --> 01:12:42.140
Anthony Taylor: The highly recommend. anyway, hiking.

780
01:12:42.170 --> 01:12:46.490
Anthony Taylor: Well, have a great Tuesday. We'll be here for a bit for office hours.

781
01:12:46.910 --> 01:12:47.740
Sihong Zhou: Ca, can I have.

