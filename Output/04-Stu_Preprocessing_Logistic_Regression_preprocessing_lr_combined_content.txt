##--CODE--##
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, MinMaxScaler
from sklearn.linear_model import LogisticRegression

##--CODE--##
# Load in data
df = pd.read_csv('https://static.bc-edx.com/ai/ail-v-1-0/m13/lesson_1/datasets/customer-churn.csv')
df

##--CODE--##
# Drop the label to create the X data


##--CODE--##
# Create the y set from the "Churn" column


##--CODE--##
# Split the data into training and testing sets using random_state=1


##--CODE--##
# Scale the X data by using StandardScaler()


##--CODE--##
# Transform the test dataset based on the fit from the training dataset


##--CODE--##
# Create a `LogisticRegression` function and assign it 
# to a variable named `logistic_regression_model`.


# Fit the model


##--CODE--##
# Score the model


##--CODE--##
# Alternatively, scale the data by using MinMaxScaler()


##--CODE--##
# Transform the test dataset based on the fit from the training dataset


##--CODE--##
# Create a `LogisticRegression` function and assign it 
# to a variable named `logistic_regression_model`.


# Fit the model


##--CODE--##
# Score the model


**Which scalar instance produces a better accuracy score on the scaled testing data?**

Answer: 

##--CODE--##


