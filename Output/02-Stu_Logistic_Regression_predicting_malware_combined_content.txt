# Predicting Malware

## Reference:

Mathur, A. (2022). [NATICUSdroid (Android Permissions) Dataset](https://archive.ics.uci.edu/dataset/722/naticusdroid+android+permissions+dataset). UCI Machine Learning Repository.

##--CODE--##
# Import the required modules
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.linear_model import LogisticRegression

## Prepare the Data

##--CODE--##
# Read in the app-data.csv file into a Pandas DataFrame.
file_path = "https://static.bc-edx.com/ai/ail-v-1-0/m13/lesson_1/datasets/app-data.csv"
app_data = pd.read_csv(file_path)

# Review the DataFrame
app_data.head()

##--CODE--##
# The column 'Result' is the thing you want to predict. 
# Class 0 indicates a benign app and class 1 indicates a malware app
# Using value_counts, how many malware apps are in this dataset?


## Split the data into training and testing sets

##--CODE--##
# The target column `y` should be the binary `Result` column.


# The `X` should be all of the features. 


##--CODE--##
# Split the dataset using the train_test_split function


## Model and Fit the Data to a Logistic Regression

##--CODE--##
# Declare a logistic regression model.
# Apply a random_state of 7 and max_iter of 120 to the model


##--CODE--##
# Fit and save the logistic regression model using the training data


##--CODE--##
# Validate the model


## Predict the Testing Labels

##--CODE--##
# Make and save testing predictions with the saved logistic regression model using the test data


# Review the predictions


## Calculate the Performance Metrics

##--CODE--##
# Display the accuracy score for the test dataset.


**Question:** For this dataset, how well did the model predict actual malware?

**Answer:** 

##--CODE--##


