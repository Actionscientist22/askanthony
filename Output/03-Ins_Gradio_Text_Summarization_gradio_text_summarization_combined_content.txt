##--CODE--##
# Uncomment the following code if you are using Google Colab.
# ! pip install transformers
# ! pip install gradio

##--CODE--##
# Import transformers pipeline
from transformers import pipeline
# Import Gradio
import gradio as gr

##--CODE--##
# Instantiate the pipeline with the summarization parameter and `facebook/bart-large-cnn` model. 
summarizer = pipeline("summarization", model="facebook/bart-large-cnn")

##--CODE--##
# Create the summarize function passing in the desired parameter. 
def summarize(article):
    

**The text to paste:**

Deep learning is part of a broader family of machine learning methods based on artificial neural networks with representation learning. Learning can be supervised, semi-supervised or unsupervised.[2]
s
Deep-learning architectures such as deep neural networks, deep belief networks, deep reinforcement learning, recurrent neural networks, convolutional neural networks and transformers have been applied to fields including computer vision, speech recognition, natural language processing, machine translation, bioinformatics, drug design, medical image analysis, climate science, material inspection and board game programs, where they have produced results comparable to and in some cases surpassing human expert performance.[3][4][5]

Artificial neural networks (ANNs) were inspired by information processing and distributed communication nodes in biological systems. ANNs have various differences from biological brains. Specifically, artificial neural networks tend to be static and symbolic, while the biological brain of most living organisms is dynamic (plastic) and analog.[6][7]

The adjective "deep" in deep learning refers to the use of multiple layers in the network. Early work showed that a linear perceptron cannot be a universal classifier, but that a network with a nonpolynomial activation function with one hidden layer of unbounded width can. Deep learning is a modern variation that is concerned with an unbounded number of layers of bounded size, which permits practical application and optimized implementation, while retaining theoretical universality under mild conditions. In deep learning the layers are also permitted to be heterogeneous and to deviate widely from biologically informed connectionist models, for the sake of efficiency, trainability and understandability.

##--CODE--##
# Create an instance of the Gradio Interface application function with the appropriate parameters. 

# Launch the app
app.launch()

##--CODE--##


