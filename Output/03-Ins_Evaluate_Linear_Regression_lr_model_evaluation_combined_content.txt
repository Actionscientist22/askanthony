# Demo: Linear Regression Model Evaluation

##--CODE--##
# Import required libraries
import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression

## Data Loading and Visualization

##--CODE--##
# Read salary data
file_path = "https://static.bc-edx.com/ai/ail-v-1-0/m12/lesson_1/datasets/salary-data.csv"
df_salary = pd.read_csv(file_path)

# Display sample data
df_salary.head()

## Data Preparation

##--CODE--##
# Reformat data of the independent variable X as a single-column array
X = df_salary["years_experience"].values.reshape(-1, 1)

# Display sample data
X[:5]

##--CODE--##
# The shape of X is 30 samples, with a single feature (column)
X.shape

##--CODE--##
# Create an array for the dependent variable y
y = df_salary["salary"]

## Building the Linear Regression Model

##--CODE--##
# Create a model with scikit-learn
model = LinearRegression()

##--CODE--##
# Fit the data into the model
model.fit(X, y)

## Make Predictions

##--CODE--##
# Make predictions using the X set
predicted_y_values = model.predict(X)

##--CODE--##
# Create a copy of the original data
df_salary_predicted = df_salary.copy()

# Add a column with the predicted salary values
df_salary_predicted["salary_predicted"] = predicted_y_values

# Display sample data
df_salary_predicted.head()

## Linear Regression Model Assessment

##--CODE--##
# Import relevant metrics - score, r2, mse, rmse - from Scikit-learn
from sklearn.metrics import mean_squared_error, r2_score

##--CODE--##
# Compute the metrics for the linear regression model


# Print relevant metrics.


##--CODE--##


