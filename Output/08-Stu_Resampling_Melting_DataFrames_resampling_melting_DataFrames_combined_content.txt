##--CODE--##
# Import Dependencies
import pandas as pd

##--CODE--##
# Read file into DataFrame
ufo_df = pd.read_csv('Resources/ufoSightings.csv', low_memory=False)

# Remove the rows with missing data
clean_ufo_df = ufo_df.dropna(how="any")

# Converting the "duration (seconds)" column's values to numeric
converted_ufo_df = clean_ufo_df.copy()
converted_ufo_df["duration (seconds)"] = converted_ufo_df.loc[:, "duration (seconds)"].astype(float)

# Change the 'date' column to a datetime object because resample will only work on datetime data types.
converted_ufo_df['datetime']= pd.to_datetime(converted_ufo_df['datetime'], errors='coerce')

# Drop the values that didn't get converted to a datetime format. 
converted_ufo_df = converted_ufo_df.dropna(subset=['datetime']).reset_index(drop=True)
converted_ufo_df.head(20)

##--CODE--##
# Get the columns.
converted_ufo_df.info()

### Apply the `resample()` Function

##--CODE--##
# Create a pivot table with the 'datetime' as the index, the columns ='duration (seconds)', and the "sum" as the values.
ufo_pivot = pd.pivot_table(converted_ufo_df, 
                                            index=['datetime'],
                                            values='duration (seconds)',
                                            aggfunc='sum')
# Show the table.
ufo_pivot.head(20)

##--CODE--##
# Resample the pivot table into weekly bins 
# and get the average duration in seconds for each week rounded to one decimal place.


# Sort the resampled pivot table in ascending order on "duration (seconds)".


##--CODE--##
# Resample the pivot table into monthly bins 
# and get the average duration in seconds for each month rounded to one decimal place.

# Sort the resampled pivot table in ascending order on "duration (seconds)".


##--CODE--##
# Create a pivot table with the 'datetime' as the index, the columns ='shape', and the "count" as the values.
ufo_pivot_sum = pd.pivot_table(converted_ufo_df, 
                                            index=['datetime'],
                                            values='shape',
                                            aggfunc='count')
# Show the table.
ufo_pivot_sum.head(20)

##--CODE--##
# Resample the pivot table into weekly bins and get the total number of sightings for each week.


# Sort the resampled pivot table in ascending order on "shape".


##--CODE--##
# Resample the pivot table into monthly bins and get the total number of sightings for each month.


# Sort the resampled pivot table in ascending order on "shape".


### Apply the `melt()` Function

##--CODE--##
# Read the book_sales.csv file into a DataFrame
book_sales_df = pd.read_csv('Resources/book_sales.csv')

# Pivot on the date_ending with the book_name as the index, and pass the "total_sales" as the values.
# Remove the index axis "date_ending".
book_sales_pivot = pd.pivot(book_sales_df, columns="date_ending",index="book_name",values="total_sales" ).rename_axis(None, axis=1)

# Reset the index so "book_name" is a column.
book_sales_reindexed = book_sales_pivot.reset_index()
book_sales_reindexed

##--CODE--##
# Convert the DataFrame from short form to long form. 
# Melt the DataFrame


##--CODE--##
# Convert the DataFrame using the variable ("book_name") we'd like to keep in the long DataFrame.


##--CODE--##
# Convert the DataFrame and rename the columns to reflect the values. 


##--CODE--##
# Group the previous DataFrame on the date and show the total sales by the "date".


##--CODE--##


