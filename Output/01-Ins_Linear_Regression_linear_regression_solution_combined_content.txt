# Demo: Linear Regression

##--CODE--##
# Import required libraries
import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression

## Data Loading and Visualization

##--CODE--##
# Read salary data
file_path = "https://static.bc-edx.com/ai/ail-v-1-0/m12/lesson_1/datasets/salary-data.csv"
df_salary = pd.read_csv(file_path)

# Display sample data
df_salary.head()

##--CODE--##
# Create a scatter plot with the salary information
salary_plot = df_salary.plot.scatter(
    x="years_experience",
    y="salary",
    title="Expected Salary Based on Years of Experience"
)
salary_plot

## Data Preparation

##--CODE--##
# Reformat data of the independent variable X as a single-column array
X = df_salary["years_experience"].values.reshape(-1, 1)

# Display sample data
X[:5]

##--CODE--##
# The shape of X is 30 samples, with a single feature (column)
X.shape

##--CODE--##
# Create an array for the dependent variable y
y = df_salary["salary"]

## Building the Linear Regression Model

##--CODE--##
# Create a model with scikit-learn
model = LinearRegression()

##--CODE--##
# Fit the data into the model
model.fit(X, y)

##--CODE--##
# Display the slope
print(f"Model's slope: {model.coef_}")

##--CODE--##
# Display the y-intercept
print(f"Model's y-intercept: {model.intercept_}")

##--CODE--##
# Display the model's best fit line formula
print(f"Model's formula: y = {model.intercept_} + {model.coef_[0]}X")

##--CODE--##
# Display the formula to predict the salary for a person with 7 years of experience
print(f"Model's formula: y = {model.intercept_} + {model.coef_[0]} * 7")

# Predict the salary for a person with 7 years of experience
y_7 = model.intercept_ + model.coef_[0] * 7

# Display the prediction
print(f"Predicted salary for a person with 7 years of experience: ${y_7:.2f}")

##--CODE--##
# Make predictions using the X set
predicted_y_values = model.predict(X)

##--CODE--##
# Create a copy of the original data
df_salary_predicted = df_salary.copy()

# Add a column with the predicted salary values
df_salary_predicted["salary_predicted"] = predicted_y_values

# Display sample data
df_salary_predicted.head()

##--CODE--##
# Create a line plot of the predicted salary values
best_fit_line = df_salary_predicted.plot.line(
    x = "years_experience",
    y = "salary_predicted",
    color = "red"
)
best_fit_line

##--CODE--##
# Plot salary scatter and best fit line together
salary_plot = df_salary_predicted.plot.scatter(
    x="years_experience",
    y="salary",
    title="Expected Salary Based on Years of Experience"
)

# Create a line plot of the predicted salary values
best_fit_line = df_salary_predicted.plot.line(
    x = "years_experience",
    y = "salary_predicted",
    color = "red",
    ax=salary_plot
)
salary_plot

##--CODE--##


