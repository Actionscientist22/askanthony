##--CODE--##
# Import required libraries
import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression

## Load and Visualize the Sales Data

##--CODE--##
# Read the sales data
file_path = "https://static.bc-edx.com/ai/ail-v-1-0/m12/lesson_1/datasets/sales.csv"
df_sales = pd.read_csv(file_path)

# Display sample data
df_sales.head()

## Prepare the Data to Fit the Linear Regression Model

##--CODE--##
# Create the X set by using the `reshape` function to format the ads data as a single column array.
X = df_sales["ads"].values.reshape(-1, 1)

# Display sample data
X[:5]

##--CODE--##
# Create an array for the dependent variable y with the sales data
y = df_sales["sales"]

## Build the Linear Regression Model

##--CODE--##
# Create a model with scikit-learn
model = LinearRegression()

##--CODE--##
# Fit the data into the model
model.fit(X, y)

## Make Predictions

##--CODE--##
# Make predictions using the X set
predicted_y_values = model.predict(X)

##--CODE--##
# Create a copy of the original data
df_sales_predicted = df_sales.copy()

# Add a column with the predicted sales values
df_sales_predicted["sales_predicted"] = predicted_y_values

# Display sample data
df_sales_predicted.head()

## Linear Regression Model Assessment

##--CODE--##
# Import relevant metrics - score, r2, mse, rmse - from Scikit-learn
from sklearn.metrics import mean_squared_error, r2_score

##--CODE--##
# Compute the metrics for the linear regression model


# Print relevant metrics.


##--CODE--##


